/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaFactory,
  MetaFactoryInterface,
} from "../../contracts/MetaFactory";

const _abi = [
  {
    inputs: [],
    name: "CreateDAOReverted",
    type: "error",
  },
  {
    inputs: [],
    name: "CreateGovernorReverted",
    type: "error",
  },
  {
    inputs: [],
    name: "CreateTreasuryReverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "governorFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasuryFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasuryImplementation",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "daoImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControlImplementation",
            type: "address",
          },
          {
            internalType: "string",
            name: "daoName",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "roles",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "rolesAdmins",
            type: "string[]",
          },
          {
            internalType: "address[][]",
            name: "members",
            type: "address[][]",
          },
          {
            internalType: "string[]",
            name: "daoFunctionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "daoActionRoles",
            type: "string[][]",
          },
          {
            internalType: "address[]",
            name: "moduleTargets",
            type: "address[]",
          },
          {
            internalType: "string[]",
            name: "moduleFunctionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "moduleActionRoles",
            type: "string[][]",
          },
        ],
        internalType: "struct IDAOFactory.CreateDAOParams",
        name: "createDAOParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "contract IGovernorModule",
            name: "_govImpl",
            type: "address",
          },
          {
            internalType: "contract IVotesUpgradeable",
            name: "_token",
            type: "address",
          },
          {
            internalType: "contract ITimelockUpgradeable",
            name: "_timelockImpl",
            type: "address",
          },
          {
            internalType: "string",
            name: "_name",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "_initialVoteExtension",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "_initialVotingDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_initialVotingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_initialProposalThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_initialQuorumNumeratorValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "_minDelay",
            type: "uint256",
          },
        ],
        internalType: "struct IGovernorFactory.CreateGovernorParams",
        name: "createGovernorParams",
        type: "tuple",
      },
    ],
    name: "createDAOAndModules",
    outputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "timelock",
        type: "address",
      },
      {
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type MetaFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaFactory__factory extends ContractFactory {
  constructor(...args: MetaFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaFactory> {
    return super.deploy(overrides || {}) as Promise<MetaFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetaFactory {
    return super.attach(address) as MetaFactory;
  }
  override connect(signer: Signer): MetaFactory__factory {
    return super.connect(signer) as MetaFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaFactoryInterface {
    return new utils.Interface(_abi) as MetaFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaFactory {
    return new Contract(address, _abi, signerOrProvider) as MetaFactory;
  }
}
