/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DAOFactory,
  DAOFactoryInterface,
} from "../../contracts/DAOFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "DAOCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "daoImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControlImplementation",
            type: "address",
          },
          {
            internalType: "string",
            name: "daoName",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "roles",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "rolesAdmins",
            type: "string[]",
          },
          {
            internalType: "address[][]",
            name: "members",
            type: "address[][]",
          },
          {
            internalType: "string[]",
            name: "daoFunctionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "daoActionRoles",
            type: "string[][]",
          },
          {
            internalType: "address[]",
            name: "moduleTargets",
            type: "address[]",
          },
          {
            internalType: "string[]",
            name: "moduleFunctionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "moduleActionRoles",
            type: "string[][]",
          },
        ],
        internalType: "struct IDAOFactory.CreateDAOParams",
        name: "createDAOParams",
        type: "tuple",
      },
    ],
    name: "createDAO",
    outputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611565806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806301ffc9a7146200003f578063ca9a367f146200006b575b600080fd5b6200005662000050366004620006f5565b620000a3565b60405190151581526020015b60405180910390f35b620000826200007c36600462000745565b620000db565b604080516001600160a01b0393841681529290911660208301520162000062565b60006001600160e01b0319821663ca9a367f60e01b1480620000d557506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080620000ed6020840184620007a0565b604051620000fb90620006e7565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f08015801562000137573d6000803e3d6000fd5b50915060006200014b60c0850185620007be565b90506200015d610100860186620007be565b6200016a92915062000812565b905060008167ffffffffffffffff8111156200018a576200018a62000839565b604051908082528060200260200182016040528015620001b4578160200160208202803683370190505b50905060008267ffffffffffffffff811115620001d557620001d562000839565b6040519080825280602002602001820160405280156200020a57816020015b6060815260200190600190039081620001f45790505b50905060008367ffffffffffffffff8111156200022b576200022b62000839565b6040519080825280602002602001820160405280156200026057816020015b60608152602001906001900390816200024a5790505b50905060006200027460c0890189620007be565b9050905060005b81811015620003a857878582815181106200029a576200029a6200084f565b6001600160a01b0390921660209283029190910190910152620002c160c08a018a620007be565b82818110620002d457620002d46200084f565b9050602002810190620002e8919062000865565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050865187925084915081106200033357620003336200084f565b60209081029190910101526200034d60e08a018a620007be565b828181106200036057620003606200084f565b9050602002810190620003749190620007be565b6200037f91620008e3565b8382815181106200039457620003946200084f565b60209081029190910101526001016200027b565b506000620003bb6101008a018a620007be565b9050905060005b818110156200054b576000620003dc60c08c018c620007be565b620003e991508362000812565b9050620003fb6101008c018c620007be565b838181106200040e576200040e6200084f565b9050602002016020810190620004259190620007a0565b8782815181106200043a576200043a6200084f565b6001600160a01b0390921660209283029190910190910152620004626101208c018c620007be565b838181106200047557620004756200084f565b905060200281019062000489919062000865565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505088518992508491508110620004d457620004d46200084f565b6020908102919091010152620004ef6101408c018c620007be565b838181106200050257620005026200084f565b9050602002810190620005169190620007be565b6200052191620008e3565b8582815181106200053657620005366200084f565b602090810291909101015250600101620003c2565b506200055e60408a0160208b01620007a0565b637ceb46c560e11b896200057660608d018d620007be565b6200058560808f018f620007be565b8f8060a00190620005979190620007be565b8d8d8d604051602401620005b59a9998979695949392919062000bf7565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620005f490620006e7565b6200060192919062000d20565b604051809103906000f0801580156200061e573d6000803e3d6000fd5b5096506001600160a01b03881663f399e22e886200064060408d018d62000865565b6040518463ffffffff1660e01b8152600401620006609392919062000d4e565b600060405180830381600087803b1580156200067b57600080fd5b505af115801562000690573d6000803e3d6000fd5b50506040516001600160a01b038d811682523393508a811692508b16907f4db6ee38117e611315b34948f609eed3356f7c79be1c2e94a2a636a7e9599cf79060200160405180910390a45050505050509250929050565b6107b18062000d7f83390190565b6000602082840312156200070857600080fd5b81356001600160e01b0319811681146200072157600080fd5b9392505050565b80356001600160a01b03811681146200074057600080fd5b919050565b600080604083850312156200075957600080fd5b620007648362000728565b9150602083013567ffffffffffffffff8111156200078157600080fd5b830161016081860312156200079557600080fd5b809150509250929050565b600060208284031215620007b357600080fd5b620007218262000728565b6000808335601e19843603018112620007d657600080fd5b83018035915067ffffffffffffffff821115620007f257600080fd5b6020019150600581901b36038213156200080b57600080fd5b9250929050565b600082198211156200083457634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126200087d57600080fd5b83018035915067ffffffffffffffff8211156200089957600080fd5b6020019150368190038213156200080b57600080fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620008db57620008db62000839565b604052919050565b600067ffffffffffffffff8084111562000901576200090162000839565b8360051b602062000914818301620008af565b8681529185019181810190368411156200092d57600080fd5b865b84811015620009bc57803586811115620009495760008081fd5b8801601f36818301126200095d5760008081fd5b81358881111562000972576200097262000839565b62000985818301601f19168801620008af565b915080825236878285010111156200099d5760008081fd5b808784018884013760009082018701528452509183019183016200092f565b50979650505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b8781101562000a7c5782840389528135601e1988360301811262000a2e57600080fd5b8701803567ffffffffffffffff81111562000a4857600080fd5b80360389131562000a5857600080fd5b62000a678682898501620009c8565b9a87019a955050509084019060010162000a0b565b5091979650505050505050565b8183526000602080850194508260005b8581101562000ac9576001600160a01b0362000ab58362000728565b168752958201959082019060010162000a99565b509495945050505050565b600081518084526020808501945080840160005b8381101562000ac95781516001600160a01b03168752958201959082019060010162000ae8565b6000815180845260005b8181101562000b375760208185018101518683018201520162000b19565b8181111562000b4a576000602083870101525b50601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101562000a7c57828403895262000b9884835162000b0f565b9885019893509084019060010162000b7d565b600081518084526020808501808196508360051b8101915082860160005b8581101562000a7c57828403895262000be484835162000b5f565b9885019893509084019060010162000bc9565b6001600160a01b038b16815260e0602080830182905260009162000c1f9084018c8e620009f1565b838103604085015262000c34818b8d620009f1565b84810360608601528881529050818101600589901b820183018a60005b8b81101562000cca57848303601f190184528135368e9003601e1901811262000c7957600080fd5b8d01803567ffffffffffffffff81111562000c9357600080fd5b8060051b36038f131562000ca657600080fd5b62000cb585828a850162000a89565b95880195945050509085019060010162000c51565b5050858103608087015262000ce0818a62000ad4565b935050505082810360a084015262000cf9818662000b5f565b905082810360c084015262000d0f818562000bab565b9d9c50505050505050505050505050565b6001600160a01b038316815260406020820181905260009062000d469083018462000b0f565b949350505050565b6001600160a01b038416815260406020820181905260009062000d759083018486620009c8565b9594505050505056fe60806040526040516107b13803806107b183398101604081905261002291610349565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610417565b60008051602061076a833981519152146100695761006961043c565b6100758282600061007c565b50506104a1565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610117838360405180606001604052806027815260200161078a602791396101de565b9392505050565b610131816102bc60201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061076a83398151915260001b6102cb60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b0316856040516102619190610452565b600060405180830381855af49150503d806000811461029c576040519150601f19603f3d011682016040523d82523d6000602084013e6102a1565b606091505b5090925090506102b28282866102ce565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102dd575081610117565b8251156102ed5782518084602001fd5b8160405162461bcd60e51b815260040161018f919061046e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610338578181015183820152602001610320565b838111156100ab5750506000910152565b6000806040838503121561035c57600080fd5b82516001600160a01b038116811461037357600080fd5b60208401519092506001600160401b038082111561039057600080fd5b818501915085601f8301126103a457600080fd5b8151818111156103b6576103b6610307565b604051601f8201601f19908116603f011681019083821181831017156103de576103de610307565b816040528281528860208487010111156103f757600080fd5b61040883602083016020880161031d565b80955050505050509250929050565b60008282101561043757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161046481846020870161031d565b9190910192915050565b602081526000825180602084015261048d81604085016020870161031d565b601f01601f19169190910160400192915050565b6102ba806104b06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c1396a395593415293023c3bc166734d52c4ee9136c6ff8eaef33568949ec5f064736f6c634300080d0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122081b3b1e0b55c57ca03394014a3a533cf17daab3dc412e25a0ea8cad6dfd0754b64736f6c634300080d0033";

type DAOFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOFactory__factory extends ContractFactory {
  constructor(...args: DAOFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAOFactory> {
    return super.deploy(overrides || {}) as Promise<DAOFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOFactory {
    return super.attach(address) as DAOFactory;
  }
  override connect(signer: Signer): DAOFactory__factory {
    return super.connect(signer) as DAOFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOFactoryInterface {
    return new utils.Interface(_abi) as DAOFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOFactory {
    return new Contract(address, _abi, signerOrProvider) as DAOFactory;
  }
}
