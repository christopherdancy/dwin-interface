/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TimelockUpgradeable,
  TimelockUpgradeableInterface,
} from "../../../../contracts/modules/Governor/TimelockUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "CallExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "predecessor",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delay",
        type: "uint256",
      },
    ],
    name: "CallScheduled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "Cancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "MinDelayChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract IDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "predecessor",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "predecessor",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "hashOperationBatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minDelay",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isOperation",
    outputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isOperationDone",
    outputs: [
      {
        internalType: "bool",
        name: "done",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isOperationPending",
    outputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isOperationReady",
    outputs: [
      {
        internalType: "bool",
        name: "ready",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "predecessor",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "delay",
        type: "uint256",
      },
    ],
    name: "scheduleBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDelay",
        type: "uint256",
      },
    ],
    name: "updateDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611d0061004c6000396000818161054801528181610588015281816106270152818161066701526106fa0152611d006000f3fe6080604052600436106101185760003560e01c806352d1902d116100a0578063c4d252f511610064578063c4d252f514610319578063c63c4e9b14610339578063d45c44351461034f578063e38335e51461037c578063f27a0c921461038f57600080fd5b806352d1902d14610276578063584b153e1461029957806364d62353146102b95780638f2a0bb0146102d9578063b1c5f427146102f957600080fd5b80632ab0f529116100e75780632ab0f529146101d357806331d50750146102035780633659cfe6146102235780634162169f146102435780634f1ef2861461026357600080fd5b806301ffc9a71461012457806313007d551461015957806313bc9f20146101915780631794bb3c146101b157600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004611446565b6103a4565b60405190151581526020015b60405180910390f35b34801561016557600080fd5b50606554610179906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b34801561019d57600080fd5b506101446101ac366004611470565b6103db565b3480156101bd57600080fd5b506101d16101cc3660046114a5565b610401565b005b3480156101df57600080fd5b506101446101ee366004611470565b60009081526066602052604090205460011490565b34801561020f57600080fd5b5061014461021e366004611470565b610525565b34801561022f57600080fd5b506101d161023e3660046114e1565b61053e565b34801561024f57600080fd5b50606854610179906001600160a01b031681565b6101d1610271366004611512565b61061d565b34801561028257600080fd5b5061028b6106ed565b604051908152602001610150565b3480156102a557600080fd5b506101446102b4366004611470565b6107a0565b3480156102c557600080fd5b506101d16102d4366004611470565b6107b7565b3480156102e557600080fd5b506101d16102f4366004611620565b6108fc565b34801561030557600080fd5b5061028b6103143660046116d2565b610ac4565b34801561032557600080fd5b506101d1610334366004611470565b610b09565b34801561034557600080fd5b5061028b60675481565b34801561035b57600080fd5b5061028b61036a366004611470565b60009081526066602052604090205490565b6101d161038a3660046116d2565b610c54565b34801561039b57600080fd5b5060675461028b565b60006001600160e01b031982166313007d5560e01b14806103d557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000818152606660205260408120546001811180156103fa5750428111155b9392505050565b600054610100900460ff1661041c5760005460ff1615610420565b303b155b6104885760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156104aa576000805461ffff19166101011790555b6104b384610dd1565b606880546001600160a01b0319166001600160a01b03851617905560678290556040805160008152602081018490527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a1801561051f576000805461ff00191690555b50505050565b60008181526066602052604081205481905b1192915050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105865760405162461bcd60e51b815260040161047f9061177b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105cf600080516020611c84833981519152546001600160a01b031690565b6001600160a01b0316146105f55760405162461bcd60e51b815260040161047f906117c7565b6105fe81610e1b565b6040805160008082526020820190925261061a91839190610ebc565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106655760405162461bcd60e51b815260040161047f9061177b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106ae600080516020611c84833981519152546001600160a01b031690565b6001600160a01b0316146106d45760405162461bcd60e51b815260040161047f906117c7565b6106dd82610e1b565b6106e982826001610ebc565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461078d5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161047f565b50600080516020611c8483398151915290565b600081815260666020526040812054600190610537565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd4906107fa90339030906001600160e01b03196000351690600401611813565b602060405180830381865afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190611840565b6108585760405163ea8e4eb560e01b815260040160405180910390fd5b3330146108bb5760405162461bcd60e51b815260206004820152602b60248201527f54696d656c6f636b436f6e74726f6c6c65723a2063616c6c6572206d7573742060448201526a62652074696d656c6f636b60a81b606482015260840161047f565b60675460408051918252602082018390527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a1606755565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061093f90339030906001600160e01b03196000351690600401611813565b602060405180830381865afa15801561095c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109809190611840565b61099d5760405163ea8e4eb560e01b815260040160405180910390fd5b8786146109bc5760405162461bcd60e51b815260040161047f90611862565b8784146109db5760405162461bcd60e51b815260040161047f90611862565b60006109ed8a8a8a8a8a8a8a8a610ac4565b90506109f9818361102c565b60005b89811015610ab75780827f4cf4410cc57040e44862ef0f45f3dd5a5e02db8eb8add648d4b0e236f1d07dca8d8d85818110610a3957610a396118a5565b9050602002016020810190610a4e91906114e1565b8c8c86818110610a6057610a606118a5565b905060200201358b8b87818110610a7957610a796118a5565b9050602002810190610a8b91906118bb565b8b8a604051610a9f9695949392919061192b565b60405180910390a3610ab08161197e565b90506109fc565b5050505050505050505050565b60008888888888888888604051602001610ae5989796959493929190611aa5565b60405160208183030381529060405280519060200120905098975050505050505050565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610b4c90339030906001600160e01b03196000351690600401611813565b602060405180830381865afa158015610b69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8d9190611840565b610baa5760405163ea8e4eb560e01b815260040160405180910390fd5b610bb3816107a0565b610c195760405162461bcd60e51b815260206004820152603160248201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e2063616044820152701b9b9bdd0818994818d85b98d95b1b1959607a1b606482015260840161047f565b6000818152606660205260408082208290555182917fbaa1eb22f2a492ba1a5fea61b8df4d27c6c8b5f3971e63bb58fa14ff72eedb7091a250565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610c9790339030906001600160e01b03196000351690600401611813565b602060405180830381865afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd89190611840565b610cf55760405163ea8e4eb560e01b815260040160405180910390fd5b868514610d145760405162461bcd60e51b815260040161047f90611862565b868314610d335760405162461bcd60e51b815260040161047f90611862565b6000610d458989898989898989610ac4565b9050610d51818461111b565b60685460405163a516a5bf60e01b81526001600160a01b039091169063a516a5bf90610d8b908c908c908c908c908c908c90600401611af9565b600060405180830381600087803b158015610da557600080fd5b505af1158015610db9573d6000803e3d6000fd5b50505050610dc6816111b6565b505050505050505050565b600054610100900460ff16610df85760405162461bcd60e51b815260040161047f90611b42565b606580546001600160a01b0319166001600160a01b03831617905561061a6111ef565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610e5e90339030906001600160e01b03196000351690600401611813565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190611840565b61061a5760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610ef457610eef83611218565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f4e575060408051601f3d908101601f19168201909252610f4b91810190611b8d565b60015b610fb15760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161047f565b600080516020611c8483398151915281146110205760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161047f565b50610eef8383836112b4565b61103582610525565b1561109a5760405162461bcd60e51b815260206004820152602f60248201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e20616c60448201526e1c9958591e481cd8da19591d5b1959608a1b606482015260840161047f565b6067548110156110fb5760405162461bcd60e51b815260206004820152602660248201527f54696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e746044820152652064656c617960d01b606482015260840161047f565b6111058142611ba6565b6000928352606660205260409092209190915550565b611124826103db565b6111405760405162461bcd60e51b815260040161047f90611bbe565b80158061115b57506000818152606660205260409020546001145b6106e95760405162461bcd60e51b815260206004820152602660248201527f54696d656c6f636b436f6e74726f6c6c65723a206d697373696e6720646570656044820152656e64656e637960d01b606482015260840161047f565b6111bf816103db565b6111db5760405162461bcd60e51b815260040161047f90611bbe565b600090815260666020526040902060019055565b600054610100900460ff166112165760405162461bcd60e51b815260040161047f90611b42565b565b6001600160a01b0381163b6112855760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161047f565b600080516020611c8483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6112bd836112d9565b6000825111806112ca5750805b15610eef5761051f8383611319565b6112e281611218565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6113815760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161047f565b600080846001600160a01b03168460405161139c9190611c34565b600060405180830381855af49150503d80600081146113d7576040519150601f19603f3d011682016040523d82523d6000602084013e6113dc565b606091505b50915091506114048282604051806060016040528060278152602001611ca46027913961140d565b95945050505050565b6060831561141c5750816103fa565b82511561142c5782518084602001fd5b8160405162461bcd60e51b815260040161047f9190611c50565b60006020828403121561145857600080fd5b81356001600160e01b0319811681146103fa57600080fd5b60006020828403121561148257600080fd5b5035919050565b80356001600160a01b03811681146114a057600080fd5b919050565b6000806000606084860312156114ba57600080fd5b6114c384611489565b92506114d160208501611489565b9150604084013590509250925092565b6000602082840312156114f357600080fd5b6103fa82611489565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561152557600080fd5b61152e83611489565b9150602083013567ffffffffffffffff8082111561154b57600080fd5b818501915085601f83011261155f57600080fd5b813581811115611571576115716114fc565b604051601f8201601f19908116603f01168101908382118183101715611599576115996114fc565b816040528281528860208487010111156115b257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008083601f8401126115e657600080fd5b50813567ffffffffffffffff8111156115fe57600080fd5b6020830191508360208260051b850101111561161957600080fd5b9250929050565b600080600080600080600080600060c08a8c03121561163e57600080fd5b893567ffffffffffffffff8082111561165657600080fd5b6116628d838e016115d4565b909b50995060208c013591508082111561167b57600080fd5b6116878d838e016115d4565b909950975060408c01359150808211156116a057600080fd5b506116ad8c828d016115d4565b9a9d999c50979a969997986060880135976080810135975060a0013595509350505050565b60008060008060008060008060a0898b0312156116ee57600080fd5b883567ffffffffffffffff8082111561170657600080fd5b6117128c838d016115d4565b909a50985060208b013591508082111561172b57600080fd5b6117378c838d016115d4565b909850965060408b013591508082111561175057600080fd5b5061175d8b828c016115d4565b999c989b509699959896976060870135966080013595509350505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b60006020828403121561185257600080fd5b815180151581146103fa57600080fd5b60208082526023908201527f54696d656c6f636b436f6e74726f6c6c65723a206c656e677468206d69736d616040820152620e8c6d60eb1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126118d257600080fd5b83018035915067ffffffffffffffff8211156118ed57600080fd5b60200191503681900382131561161957600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038716815285602082015260a06040820152600061195360a083018688611902565b60608301949094525060800152949350505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161199057611990611968565b5060010190565b8183526000602080850194508260005b858110156119d3576001600160a01b036119c083611489565b16875295820195908201906001016119a7565b509495945050505050565b81835260006001600160fb1b038311156119f757600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835260006020808501808196508560051b810191508460005b87811015611a985782840389528135601e19883603018112611a4f57600080fd5b8701803567ffffffffffffffff811115611a6857600080fd5b803603891315611a7757600080fd5b611a848682898501611902565b9a87019a9550505090840190600101611a2e565b5091979650505050505050565b60a081526000611ab960a083018a8c611997565b8281036020840152611acc81898b6119de565b90508281036040840152611ae1818789611a14565b60608401959095525050608001529695505050505050565b606081526000611b0d60608301888a611997565b8281036020840152611b208187896119de565b90508281036040840152611b35818587611a14565b9998505050505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611b9f57600080fd5b5051919050565b60008219821115611bb957611bb9611968565b500190565b6020808252602a908201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e206973604082015269206e6f7420726561647960b01b606082015260800190565b60005b83811015611c23578181015183820152602001611c0b565b8381111561051f5750506000910152565b60008251611c46818460208701611c08565b9190910192915050565b6020815260008251806020840152611c6f816040850160208701611c08565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122047c07096eefbdafa8f694b88f6df02d7d4570a9a9da33381b75ebeecce277bad64736f6c634300080d0033";

type TimelockUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimelockUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimelockUpgradeable__factory extends ContractFactory {
  constructor(...args: TimelockUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimelockUpgradeable> {
    return super.deploy(overrides || {}) as Promise<TimelockUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TimelockUpgradeable {
    return super.attach(address) as TimelockUpgradeable;
  }
  override connect(signer: Signer): TimelockUpgradeable__factory {
    return super.connect(signer) as TimelockUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimelockUpgradeableInterface {
    return new utils.Interface(_abi) as TimelockUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimelockUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as TimelockUpgradeable;
  }
}
