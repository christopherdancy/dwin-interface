/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasuryModule,
  TreasuryModuleInterface,
} from "../../../../contracts/modules/Treasury/TreasuryModule";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnequalArrayLengths",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "senders",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "ERC20TokensDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "ERC20TokensWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "senders",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "ERC721TokensDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "ERC721TokensWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "EthWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "senders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "depositERC20Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "senders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "depositERC721Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "withdrawERC20Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "withdrawERC721Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611d0761004c600039600081816104a1015281816104ea01528181610589015281816105c9015261065c0152611d076000f3fe6080604052600436106100ab5760003560e01c806352d1902d1161006457806352d1902d146101f55780639ae6b5be14610218578063c20eaa1214610238578063c4d66de814610258578063ce3ebbad14610278578063fb1d100e1461029857600080fd5b806301ffc9a7146100ef57806313007d5514610124578063150b7a021461015c57806316633fa8146101a05780633659cfe6146101c25780634f1ef286146101e257600080fd5b366100ea57604080513381523460208201527f66ff7c8f71ccc7c36152a41920d0d3b46ef3034359f76aa1498ed4478c204b5c910160405180910390a1005b600080fd5b3480156100fb57600080fd5b5061010f61010a36600461168e565b6102b8565b60405190151581526020015b60405180910390f35b34801561013057600080fd5b50606554610144906001600160a01b031681565b6040516001600160a01b03909116815260200161011b565b34801561016857600080fd5b50610187610177366004611777565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161011b565b3480156101ac57600080fd5b506101c06101bb36600461182b565b6102e3565b005b3480156101ce57600080fd5b506101c06101dd3660046118c5565b610497565b6101c06101f03660046118e0565b61057f565b34801561020157600080fd5b5061020a61064f565b60405190815260200161011b565b34801561022457600080fd5b506101c061023336600461182b565b610702565b34801561024457600080fd5b506101c061025336600461182b565b610900565b34801561026457600080fd5b506101c06102733660046118c5565b610afe565b34801561028457600080fd5b506101c061029336600461182b565b610bc0565b3480156102a457600080fd5b506101c06102b336600461192e565b610d58565b60006001600160e01b0319821663bf7ee64f60e01b14806102dd57506102dd82610eea565b92915050565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061032690339030906001600160e01b0319600035169060040161199a565b602060405180830381865afa158015610343573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036791906119c7565b6103845760405163ea8e4eb560e01b815260040160405180910390fd5b84831415806103935750848114155b156103b1576040516311e86f7360e01b815260040160405180910390fd5b8460005b8181101561044c576104378686838181106103d2576103d26119e9565b90506020020160208101906103e791906118c5565b8585848181106103f9576103f96119e9565b905060200201358a8a85818110610412576104126119e9565b905060200201602081019061042791906118c5565b6001600160a01b03169190610f1f565b60010180610444816119ff565b9150506103b5565b507f279ee69c859e439f9c0a143eba32e0a9c0dd4ccab6f0f0f7b5df1a4c73eb2f8f87878787878760405161048696959493929190611aa3565b60405180910390a150505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104e85760405162461bcd60e51b81526004016104df90611aec565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610531600080516020611c8b833981519152546001600160a01b031690565b6001600160a01b0316146105575760405162461bcd60e51b81526004016104df90611b38565b61056081610f87565b6040805160008082526020820190925261057c91839190611028565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105c75760405162461bcd60e51b81526004016104df90611aec565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610610600080516020611c8b833981519152546001600160a01b031690565b6001600160a01b0316146106365760405162461bcd60e51b81526004016104df90611b38565b61063f82610f87565b61064b82826001611028565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106ef5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104df565b50600080516020611c8b83398151915290565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061074590339030906001600160e01b0319600035169060040161199a565b602060405180830381865afa158015610762573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078691906119c7565b6107a35760405163ea8e4eb560e01b815260040160405180910390fd5b84831415806107b25750848114155b156107d0576040516311e86f7360e01b815260040160405180910390fd5b8460005b818110156108c6578787828181106107ee576107ee6119e9565b905060200201602081019061080391906118c5565b6001600160a01b03166342842e0e878784818110610823576108236119e9565b905060200201602081019061083891906118c5565b3087878681811061084b5761084b6119e9565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156108a257600080fd5b505af11580156108b6573d6000803e3d6000fd5b5050600190920191506107d49050565b507f62e602fa7b8d1849d67c000a48e0e1d8a1046aadd78b524ffba8e69ad277f8b387878787878760405161048696959493929190611aa3565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061094390339030906001600160e01b0319600035169060040161199a565b602060405180830381865afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098491906119c7565b6109a15760405163ea8e4eb560e01b815260040160405180910390fd5b84831415806109b05750848114155b156109ce576040516311e86f7360e01b815260040160405180910390fd5b8460005b81811015610ac4578787828181106109ec576109ec6119e9565b9050602002016020810190610a0191906118c5565b6001600160a01b03166342842e0e30888885818110610a2257610a226119e9565b9050602002016020810190610a3791906118c5565b878786818110610a4957610a496119e9565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610aa057600080fd5b505af1158015610ab4573d6000803e3d6000fd5b5050600190920191506109d29050565b507f098a00c78513360f53ddec2fba6ff5cee156eeae8fcb72797988acb497611c0e87878787878760405161048696959493929190611aa3565b600054610100900460ff16610b195760005460ff1615610b1d565b303b155b610b805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104df565b600054610100900460ff16158015610ba2576000805461ffff19166101011790555b610bab82611193565b801561064b576000805461ff00191690555050565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610c0390339030906001600160e01b0319600035169060040161199a565b602060405180830381865afa158015610c20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4491906119c7565b610c615760405163ea8e4eb560e01b815260040160405180910390fd5b8483141580610c705750848114155b15610c8e576040516311e86f7360e01b815260040160405180910390fd5b8460005b81811015610d1e57610d16868683818110610caf57610caf6119e9565b9050602002016020810190610cc491906118c5565b30868685818110610cd757610cd76119e9565b905060200201358b8b86818110610cf057610cf06119e9565b9050602002016020810190610d0591906118c5565b6001600160a01b03169291906111dd565b600101610c92565b507f057589822293e3f912f1d5b49bbcd6513212cf97ecd74bffc31d4178653fd70c87878787878760405161048696959493929190611aa3565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610d9b90339030906001600160e01b0319600035169060040161199a565b602060405180830381865afa158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc91906119c7565b610df95760405163ea8e4eb560e01b815260040160405180910390fd5b828114610e19576040516311e86f7360e01b815260040160405180910390fd5b8260005b81811015610ea557858582818110610e3757610e376119e9565b9050602002016020810190610e4c91906118c5565b6001600160a01b03166108fc858584818110610e6a57610e6a6119e9565b905060200201359081150290604051600060405180830381858888f19350505050158015610e9c573d6000803e3d6000fd5b50600101610e1d565b507fd8043a55fabd5bef5435dec665e02f814171964a1ee23b23df5796a997a78aa285858585604051610edb9493929190611b84565b60405180910390a15050505050565b60006001600160e01b031982166313007d5560e01b14806102dd57506301ffc9a760e01b6001600160e01b03198316146102dd565b6040516001600160a01b038316602482015260448101829052610f8290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261121b565b505050565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610fca90339030906001600160e01b0319600035169060040161199a565b602060405180830381865afa158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b91906119c7565b61057c5760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561105b57610f82836112ed565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110b5575060408051601f3d908101601f191682019092526110b291810190611bab565b60015b6111185760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104df565b600080516020611c8b83398151915281146111875760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104df565b50610f82838383611389565b600054610100900460ff166111ba5760405162461bcd60e51b81526004016104df90611bc4565b606580546001600160a01b0319166001600160a01b03831617905561057c6113ae565b6040516001600160a01b03808516602483015283166044820152606481018290526112159085906323b872dd60e01b90608401610f4b565b50505050565b6000611270826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113d79092919063ffffffff16565b805190915015610f82578080602001905181019061128e91906119c7565b610f825760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104df565b6001600160a01b0381163b61135a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104df565b600080516020611c8b83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611392836113f0565b60008251118061139f5750805b15610f82576112158383611430565b600054610100900460ff166113d55760405162461bcd60e51b81526004016104df90611bc4565b565b60606113e68484600085611524565b90505b9392505050565b6113f9816112ed565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6114985760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104df565b600080846001600160a01b0316846040516114b39190611c3b565b600060405180830381855af49150503d80600081146114ee576040519150601f19603f3d011682016040523d82523d6000602084013e6114f3565b606091505b509150915061151b8282604051806060016040528060278152602001611cab60279139611655565b95945050505050565b6060824710156115855760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104df565b6001600160a01b0385163b6115dc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104df565b600080866001600160a01b031685876040516115f89190611c3b565b60006040518083038185875af1925050503d8060008114611635576040519150601f19603f3d011682016040523d82523d6000602084013e61163a565b606091505b509150915061164a828286611655565b979650505050505050565b606083156116645750816113e9565b8251156116745782518084602001fd5b8160405162461bcd60e51b81526004016104df9190611c57565b6000602082840312156116a057600080fd5b81356001600160e01b0319811681146113e957600080fd5b80356001600160a01b03811681146116cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126116fb57600080fd5b813567ffffffffffffffff80821115611716576117166116d4565b604051601f8301601f19908116603f0116810190828211818310171561173e5761173e6116d4565b8160405283815286602085880101111561175757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561178d57600080fd5b611796856116b8565b93506117a4602086016116b8565b925060408501359150606085013567ffffffffffffffff8111156117c757600080fd5b6117d3878288016116ea565b91505092959194509250565b60008083601f8401126117f157600080fd5b50813567ffffffffffffffff81111561180957600080fd5b6020830191508360208260051b850101111561182457600080fd5b9250929050565b6000806000806000806060878903121561184457600080fd5b863567ffffffffffffffff8082111561185c57600080fd5b6118688a838b016117df565b9098509650602089013591508082111561188157600080fd5b61188d8a838b016117df565b909650945060408901359150808211156118a657600080fd5b506118b389828a016117df565b979a9699509497509295939492505050565b6000602082840312156118d757600080fd5b6113e9826116b8565b600080604083850312156118f357600080fd5b6118fc836116b8565b9150602083013567ffffffffffffffff81111561191857600080fd5b611924858286016116ea565b9150509250929050565b6000806000806040858703121561194457600080fd5b843567ffffffffffffffff8082111561195c57600080fd5b611968888389016117df565b9096509450602087013591508082111561198157600080fd5b5061198e878288016117df565b95989497509550505050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156119d957600080fd5b815180151581146113e957600080fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611a1f57634e487b7160e01b600052601160045260246000fd5b5060010190565b8183526000602080850194508260005b85811015611a62576001600160a01b03611a4f836116b8565b1687529582019590820190600101611a36565b509495945050505050565b81835260006001600160fb1b03831115611a8657600080fd5b8260051b8083602087013760009401602001938452509192915050565b606081526000611ab760608301888a611a26565b8281036020840152611aca818789611a26565b90508281036040840152611adf818587611a6d565b9998505050505050505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b604081526000611b98604083018688611a26565b828103602084015261164a818587611a6d565b600060208284031215611bbd57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015611c2a578181015183820152602001611c12565b838111156112155750506000910152565b60008251611c4d818460208701611c0f565b9190910192915050565b6020815260008251806020840152611c76816040850160208701611c0f565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d4c148c2126758836e4c25646562f725a93be5bd7121433380803699ab00c22864736f6c634300080d0033";

type TreasuryModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasuryModule__factory extends ContractFactory {
  constructor(...args: TreasuryModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasuryModule> {
    return super.deploy(overrides || {}) as Promise<TreasuryModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TreasuryModule {
    return super.attach(address) as TreasuryModule;
  }
  override connect(signer: Signer): TreasuryModule__factory {
    return super.connect(signer) as TreasuryModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryModuleInterface {
    return new utils.Interface(_abi) as TreasuryModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasuryModule {
    return new Contract(address, _abi, signerOrProvider) as TreasuryModule;
  }
}
