/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GnosisWrapperFactory,
  GnosisWrapperFactoryInterface,
} from "../../contracts/GnosisWrapperFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "gnosisSafe",
        type: "address",
      },
    ],
    name: "GnosisWrapperCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "semanticVersion",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "frontendURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "VersionCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_semanticVersion",
        type: "string",
      },
      {
        internalType: "string",
        name: "_frontendURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    name: "addVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "versionControl",
    outputs: [
      {
        internalType: "string",
        name: "semanticVersion",
        type: "string",
      },
      {
        internalType: "string",
        name: "frontendURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6119308061007e6000396000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c80638129fc1c11620000625780638129fc1c146200010d5780638da5cb5b1462000117578063d7bef6ce1462000133578063f2fde38b146200015b57600080fd5b806301ffc9a714620000985780634d4a76f514620000c45780636d81fc7214620000dd578063715018a61462000103575b600080fd5b620000af620000a936600462000c9f565b62000172565b60405190151581526020015b60405180910390f35b620000db620000d536600462000d34565b620001b3565b005b620000f4620000ee36600462000dc1565b620002fe565b604051620000bb919062000e50565b620000db620003dd565b620000db620003f5565b6000546040516001600160a01b039091168152602001620000bb565b6200014a6200014436600462000e9f565b6200052e565b604051620000bb9392919062000f1a565b620000db6200016c36600462000f5c565b62000692565b60006301ffc9a760e01b6001600160e01b031983161480620001ad57506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b620001bd6200070e565b6040805160806020601f88018190040282018101909252606081018681526002928291908990899081908501838280828437600092019190915250505090825250604080516020601f88018190048102820181019092528681529181019190879087908190840183828082843760009201829052509385525050506001600160a01b03851660209283015283546001810185559381528190208251805193946003029091019262000272928492019062000beb565b5060208281015180516200028d926001850192019062000beb565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055517f55333c8005b89ec35427ce0dee089bf2afe5d50fd45f9afd62478d8c299f999990620002ef908790879087908790879062000fa5565b60405180910390a15050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090506200033b8562000335858762001035565b6200076a565b816000815181106200035157620003516200111a565b60200260200101906001600160a01b031690816001600160a01b0316815250507ff847bcab38ed0ec4df55ba414b67ce4fb25d80d8767602894f274f4d42684a3581600081518110620003a857620003a86200111a565b6020026020010151604051620003cd91906001600160a01b0391909116815260200190565b60405180910390a1949350505050565b620003e76200070e565b620003f3600062000983565b565b600054600160a81b900460ff16158080156200041e57506000546001600160a01b90910460ff16105b80620004415750303b158015620004415750600054600160a01b900460ff166001145b620004aa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff60a01b1916600160a01b1790558015620004d8576000805460ff60a81b1916600160a81b1790555b620004e2620009d3565b80156200052b576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600281815481106200053f57600080fd5b9060005260206000209060030201600091509050806000018054620005649062001130565b80601f0160208091040260200160405190810160405280929190818152602001828054620005929062001130565b8015620005e35780601f10620005b757610100808354040283529160200191620005e3565b820191906000526020600020905b815481529060010190602001808311620005c557829003601f168201915b505050505090806001018054620005fa9062001130565b80601f0160208091040260200160405190810160405280929190818152602001828054620006289062001130565b8015620006795780601f106200064d5761010080835404028352916020019162000679565b820191906000526020600020905b8154815290600101906020018083116200065b57829003601f168201915b505050600290930154919250506001600160a01b031683565b6200069c6200070e565b6001600160a01b038116620007035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620004a1565b6200052b8162000983565b6000546001600160a01b03163314620003f35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620004a1565b6000620008a46000843346866003815181106200078b576200078b6200111a565b6020026020010151806020019051810190620007a891906200116c565b6040516bffffffffffffffffffffffff19606095861b811660208301529390941b9092166034840152604883015260688201526088016040516020818303038152906040528051906020012060405180602001620008069062000c7a565b6020820181038252601f19601f82011660405250856002815181106200083057620008306200111a565b60200260200101518060200190518101906200084d919062001186565b604080516001600160a01b039092166020830152818101526000606082015260800160408051601f19818403018152908290526200088f9291602001620011a6565b60405160208183030381529060405262000a54565b9050806001600160a01b031663485cc95583600081518110620008cb57620008cb6200111a565b6020026020010151806020019051810190620008e8919062001186565b84600181518110620008fe57620008fe6200111a565b60200260200101518060200190518101906200091b919062001186565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b1580156200096457600080fd5b505af115801562000979573d6000803e3d6000fd5b5050505092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a81b900460ff1662000a425760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620004a1565b620003f36320cb8a8760e01b62000b67565b6000808447101562000aa95760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401620004a1565b825160000362000afc5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401620004a1565b8383516020850187f590506001600160a01b03811662000b5f5760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401620004a1565b949350505050565b6001600160e01b0319808216900362000bc35760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401620004a1565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b82805462000bf99062001130565b90600052602060002090601f01602090048101928262000c1d576000855562000c68565b82601f1062000c3857805160ff191683800117855562000c68565b8280016001018555821562000c68579182015b8281111562000c6857825182559160200191906001019062000c4b565b5062000c7692915062000c88565b5090565b61072180620011da83390190565b5b8082111562000c76576000815560010162000c89565b60006020828403121562000cb257600080fd5b81356001600160e01b03198116811462000ccb57600080fd5b9392505050565b60008083601f84011262000ce557600080fd5b50813567ffffffffffffffff81111562000cfe57600080fd5b60208301915083602082850101111562000d1757600080fd5b9250929050565b6001600160a01b03811681146200052b57600080fd5b60008060008060006060868803121562000d4d57600080fd5b853567ffffffffffffffff8082111562000d6657600080fd5b62000d7489838a0162000cd2565b9097509550602088013591508082111562000d8e57600080fd5b5062000d9d8882890162000cd2565b909450925050604086013562000db38162000d1e565b809150509295509295909350565b60008060006040848603121562000dd757600080fd5b833562000de48162000d1e565b9250602084013567ffffffffffffffff8082111562000e0257600080fd5b818601915086601f83011262000e1757600080fd5b81358181111562000e2757600080fd5b8760208260051b850101111562000e3d57600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562000e935783516001600160a01b03168352928401929184019160010162000e6c565b50909695505050505050565b60006020828403121562000eb257600080fd5b5035919050565b60005b8381101562000ed657818101518382015260200162000ebc565b8381111562000ee6576000848401525b50505050565b6000815180845262000f0681602086016020860162000eb9565b601f01601f19169290920160200192915050565b60608152600062000f2f606083018662000eec565b828103602084015262000f43818662000eec565b91505060018060a01b0383166040830152949350505050565b60006020828403121562000f6f57600080fd5b813562000ccb8162000d1e565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600062000fbb60608301878962000f7c565b828103602084015262000fd081868862000f7c565b91505060018060a01b03831660408301529695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200102d576200102d62000feb565b604052919050565b600067ffffffffffffffff8084111562001053576200105362000feb565b8360051b60206200106681830162001001565b8681529185019181810190368411156200107f57600080fd5b865b848110156200110e578035868111156200109b5760008081fd5b8801601f3681830112620010af5760008081fd5b813588811115620010c457620010c462000feb565b620010d7818301601f1916880162001001565b91508082523687828501011115620010ef5760008081fd5b8087840188840137600090820187015284525091830191830162001081565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200114557607f821691505b6020821081036200116657634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156200117f57600080fd5b5051919050565b6000602082840312156200119957600080fd5b815162000ccb8162000d1e565b60008351620011ba81846020880162000eb9565b835190830190620011d081836020880162000eb9565b0194935050505056fe608060405260405161072138038061072183398101604081905261002291610314565b61002e82826000610035565b5050610431565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d083836040518060600160405280602781526020016106fa602791396101a9565b9392505050565b6100ea8161028760201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61029660201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102115760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610148565b600080856001600160a01b03168560405161022c91906103e2565b600060405180830381855af49150503d8060008114610267576040519150601f19603f3d011682016040523d82523d6000602084013e61026c565b606091505b50909250905061027d828286610299565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a85750816100d0565b8251156102b85782518084602001fd5b8160405162461bcd60e51b815260040161014891906103fe565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103035781810151838201526020016102eb565b838111156100645750506000910152565b6000806040838503121561032757600080fd5b82516001600160a01b038116811461033e57600080fd5b60208401519092506001600160401b038082111561035b57600080fd5b818501915085601f83011261036f57600080fd5b815181811115610381576103816102d2565b604051601f8201601f19908116603f011681019083821181831017156103a9576103a96102d2565b816040528281528860208487010111156103c257600080fd5b6103d38360208301602088016102e8565b80955050505050509250929050565b600082516103f48184602087016102e8565b9190910192915050565b602081526000825180602084015261041d8160408501602087016102e8565b601f01601f19169190910160400192915050565b6102ba806104406000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220624d8c621d429fd8b7eed49ae71e0c11f4101ae7335c4c9d149cb44a1625749c64736f6c634300080d0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212204bfa64d2cc53735f0afb43b405ed1c56af81410b74ab68e7c005e09850f7758864736f6c634300080d0033";

type GnosisWrapperFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GnosisWrapperFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GnosisWrapperFactory__factory extends ContractFactory {
  constructor(...args: GnosisWrapperFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GnosisWrapperFactory> {
    return super.deploy(overrides || {}) as Promise<GnosisWrapperFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GnosisWrapperFactory {
    return super.attach(address) as GnosisWrapperFactory;
  }
  override connect(signer: Signer): GnosisWrapperFactory__factory {
    return super.connect(signer) as GnosisWrapperFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GnosisWrapperFactoryInterface {
    return new utils.Interface(_abi) as GnosisWrapperFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GnosisWrapperFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GnosisWrapperFactory;
  }
}
