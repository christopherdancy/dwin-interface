/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasuryModule,
  TreasuryModuleInterface,
} from "../../../../contracts/mocks/treasury/TreasuryModule";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnequalArrayLengths",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "senders",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "ERC20TokensDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "ERC20TokensWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "senders",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "ERC721TokensDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "ERC721TokensWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EthDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "EthWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IDAOAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "senders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "depositERC20Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "senders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "depositERC721Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "withdrawERC20Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "withdrawERC721Tokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161203b61004c600039600081816105c001528181610609015281816106a8015281816106e8015261077b015261203b6000f3fe6080604052600436106100e15760003560e01c806352d1902d1161007f578063c20eaa1211610059578063c20eaa12146102b0578063c4d66de8146102d0578063ce3ebbad146102f0578063fb1d100e1461031057600080fd5b806352d1902d1461024d5780638991255b146102705780639ae6b5be1461029057600080fd5b8063150b7a02116100bb578063150b7a02146101b457806316633fa8146101f85780633659cfe61461021a5780634f1ef2861461023a57600080fd5b806301ffc9a71461012557806306fdde031461015a57806313007d551461017c57600080fd5b3661012057604080513381523460208201527f66ff7c8f71ccc7c36152a41920d0d3b46ef3034359f76aa1498ed4478c204b5c910160405180910390a1005b600080fd5b34801561013157600080fd5b5061014561014036600461193f565b610330565b60405190151581526020015b60405180910390f35b34801561016657600080fd5b5061016f610370565b6040516101519190611995565b34801561018857600080fd5b5060665461019c906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b3480156101c057600080fd5b506101df6101cf366004611a82565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610151565b34801561020457600080fd5b50610218610213366004611b36565b610402565b005b34801561022657600080fd5b50610218610235366004611bd0565b6105b6565b610218610248366004611beb565b61069e565b34801561025957600080fd5b5061026261076e565b604051908152602001610151565b34801561027c57600080fd5b5060675461019c906001600160a01b031681565b34801561029c57600080fd5b506102186102ab366004611b36565b610821565b3480156102bc57600080fd5b506102186102cb366004611b36565b610a1f565b3480156102dc57600080fd5b506102186102eb366004611bd0565b610c1d565b3480156102fc57600080fd5b5061021861030b366004611b36565b610ccc565b34801561031c57600080fd5b5061021861032b366004611c39565b610e64565b60006301ffc9a760e01b6001600160e01b03198316148061036a57506001600160e01b0319821660009081526065602052604090205460ff165b92915050565b60606068805461037f90611ca5565b80601f01602080910402602001604051908101604052809291908181526020018280546103ab90611ca5565b80156103f85780601f106103cd576101008083540402835291602001916103f8565b820191906000526020600020905b8154815290600101906020018083116103db57829003601f168201915b5050505050905090565b6066546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061044590339030906001600160e01b03196000351690600401611cdf565b602060405180830381865afa158015610462573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104869190611d0c565b6104a35760405163ea8e4eb560e01b815260040160405180910390fd5b84831415806104b25750848114155b156104d0576040516311e86f7360e01b815260040160405180910390fd5b8460005b8181101561056b576105568686838181106104f1576104f1611d2e565b90506020020160208101906105069190611bd0565b85858481811061051857610518611d2e565b905060200201358a8a8581811061053157610531611d2e565b90506020020160208101906105469190611bd0565b6001600160a01b03169190610ff6565b6001018061056381611d44565b9150506104d4565b507f279ee69c859e439f9c0a143eba32e0a9c0dd4ccab6f0f0f7b5df1a4c73eb2f8f8787878787876040516105a596959493929190611de8565b60405180910390a150505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106075760405162461bcd60e51b81526004016105fe90611e31565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610650600080516020611fbf833981519152546001600160a01b031690565b6001600160a01b0316146106765760405162461bcd60e51b81526004016105fe90611e7d565b61067f8161105e565b6040805160008082526020820190925261069b918391906110ff565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106e65760405162461bcd60e51b81526004016105fe90611e31565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661072f600080516020611fbf833981519152546001600160a01b031690565b6001600160a01b0316146107555760405162461bcd60e51b81526004016105fe90611e7d565b61075e8261105e565b61076a828260016110ff565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461080e5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105fe565b50600080516020611fbf83398151915290565b6066546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061086490339030906001600160e01b03196000351690600401611cdf565b602060405180830381865afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a59190611d0c565b6108c25760405163ea8e4eb560e01b815260040160405180910390fd5b84831415806108d15750848114155b156108ef576040516311e86f7360e01b815260040160405180910390fd5b8460005b818110156109e55787878281811061090d5761090d611d2e565b90506020020160208101906109229190611bd0565b6001600160a01b03166342842e0e87878481811061094257610942611d2e565b90506020020160208101906109579190611bd0565b3087878681811061096a5761096a611d2e565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156109c157600080fd5b505af11580156109d5573d6000803e3d6000fd5b5050600190920191506108f39050565b507f62e602fa7b8d1849d67c000a48e0e1d8a1046aadd78b524ffba8e69ad277f8b38787878787876040516105a596959493929190611de8565b6066546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610a6290339030906001600160e01b03196000351690600401611cdf565b602060405180830381865afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa39190611d0c565b610ac05760405163ea8e4eb560e01b815260040160405180910390fd5b8483141580610acf5750848114155b15610aed576040516311e86f7360e01b815260040160405180910390fd5b8460005b81811015610be357878782818110610b0b57610b0b611d2e565b9050602002016020810190610b209190611bd0565b6001600160a01b03166342842e0e30888885818110610b4157610b41611d2e565b9050602002016020810190610b569190611bd0565b878786818110610b6857610b68611d2e565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b158015610bbf57600080fd5b505af1158015610bd3573d6000803e3d6000fd5b505060019092019150610af19050565b507f098a00c78513360f53ddec2fba6ff5cee156eeae8fcb72797988acb497611c0e8787878787876040516105a596959493929190611de8565b6000610c29600161126a565b90508015610c41576000805461ff0019166101001790555b610c7382336040518060400160405280600f81526020016e5472656173757279204d6f64756c6560881b8152506112f7565b610c8363bf7ee64f60e01b611376565b801561076a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6066546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610d0f90339030906001600160e01b03196000351690600401611cdf565b602060405180830381865afa158015610d2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d509190611d0c565b610d6d5760405163ea8e4eb560e01b815260040160405180910390fd5b8483141580610d7c5750848114155b15610d9a576040516311e86f7360e01b815260040160405180910390fd5b8460005b81811015610e2a57610e22868683818110610dbb57610dbb611d2e565b9050602002016020810190610dd09190611bd0565b30868685818110610de357610de3611d2e565b905060200201358b8b86818110610dfc57610dfc611d2e565b9050602002016020810190610e119190611bd0565b6001600160a01b03169291906113f5565b600101610d9e565b507f057589822293e3f912f1d5b49bbcd6513212cf97ecd74bffc31d4178653fd70c8787878787876040516105a596959493929190611de8565b6066546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610ea790339030906001600160e01b03196000351690600401611cdf565b602060405180830381865afa158015610ec4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee89190611d0c565b610f055760405163ea8e4eb560e01b815260040160405180910390fd5b828114610f25576040516311e86f7360e01b815260040160405180910390fd5b8260005b81811015610fb157858582818110610f4357610f43611d2e565b9050602002016020810190610f589190611bd0565b6001600160a01b03166108fc858584818110610f7657610f76611d2e565b905060200201359081150290604051600060405180830381858888f19350505050158015610fa8573d6000803e3d6000fd5b50600101610f29565b507fd8043a55fabd5bef5435dec665e02f814171964a1ee23b23df5796a997a78aa285858585604051610fe79493929190611ec9565b60405180910390a15050505050565b6040516001600160a01b03831660248201526044810182905261105990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611433565b505050565b6066546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd4906110a190339030906001600160e01b03196000351690600401611cdf565b602060405180830381865afa1580156110be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e29190611d0c565b61069b5760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156111325761105983611505565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561118c575060408051601f3d908101601f1916820190925261118991810190611ef0565b60015b6111ef5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105fe565b600080516020611fbf833981519152811461125e5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105fe565b506110598383836115a1565b60008054610100900460ff16156112b1578160ff16600114801561128d5750303b155b6112a95760405162461bcd60e51b81526004016105fe90611f09565b506000919050565b60005460ff8084169116106112d85760405162461bcd60e51b81526004016105fe90611f09565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661131e5760405162461bcd60e51b81526004016105fe90611f57565b606680546001600160a01b038086166001600160a01b031992831617909255606780549285169290911691909117905580516113619060689060208401906118a6565b5061136a6115c6565b611059630afed1ab60e11b5b6001600160e01b031980821690036113d05760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016105fe565b6001600160e01b0319166000908152606560205260409020805460ff19166001179055565b6040516001600160a01b038085166024830152831660448201526064810182905261142d9085906323b872dd60e01b90608401611022565b50505050565b6000611488826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115ef9092919063ffffffff16565b80519091501561105957808060200190518101906114a69190611d0c565b6110595760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105fe565b6001600160a01b0381163b6115725760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105fe565b600080516020611fbf83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6115aa83611608565b6000825111806115b75750805b156110595761142d8383611648565b600054610100900460ff166115ed5760405162461bcd60e51b81526004016105fe90611f57565b565b60606115fe848460008561173c565b90505b9392505050565b61161181611505565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6116b05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105fe565b600080846001600160a01b0316846040516116cb9190611fa2565b600060405180830381855af49150503d8060008114611706576040519150601f19603f3d011682016040523d82523d6000602084013e61170b565b606091505b50915091506117338282604051806060016040528060278152602001611fdf6027913961186d565b95945050505050565b60608247101561179d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105fe565b6001600160a01b0385163b6117f45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105fe565b600080866001600160a01b031685876040516118109190611fa2565b60006040518083038185875af1925050503d806000811461184d576040519150601f19603f3d011682016040523d82523d6000602084013e611852565b606091505b509150915061186282828661186d565b979650505050505050565b6060831561187c575081611601565b82511561188c5782518084602001fd5b8160405162461bcd60e51b81526004016105fe9190611995565b8280546118b290611ca5565b90600052602060002090601f0160209004810192826118d4576000855561191a565b82601f106118ed57805160ff191683800117855561191a565b8280016001018555821561191a579182015b8281111561191a5782518255916020019190600101906118ff565b5061192692915061192a565b5090565b5b80821115611926576000815560010161192b565b60006020828403121561195157600080fd5b81356001600160e01b03198116811461160157600080fd5b60005b8381101561198457818101518382015260200161196c565b8381111561142d5750506000910152565b60208152600082518060208401526119b4816040850160208701611969565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146112f257600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a0657600080fd5b813567ffffffffffffffff80821115611a2157611a216119df565b604051601f8301601f19908116603f01168101908282118183101715611a4957611a496119df565b81604052838152866020858801011115611a6257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215611a9857600080fd5b611aa1856119c8565b9350611aaf602086016119c8565b925060408501359150606085013567ffffffffffffffff811115611ad257600080fd5b611ade878288016119f5565b91505092959194509250565b60008083601f840112611afc57600080fd5b50813567ffffffffffffffff811115611b1457600080fd5b6020830191508360208260051b8501011115611b2f57600080fd5b9250929050565b60008060008060008060608789031215611b4f57600080fd5b863567ffffffffffffffff80821115611b6757600080fd5b611b738a838b01611aea565b90985096506020890135915080821115611b8c57600080fd5b611b988a838b01611aea565b90965094506040890135915080821115611bb157600080fd5b50611bbe89828a01611aea565b979a9699509497509295939492505050565b600060208284031215611be257600080fd5b611601826119c8565b60008060408385031215611bfe57600080fd5b611c07836119c8565b9150602083013567ffffffffffffffff811115611c2357600080fd5b611c2f858286016119f5565b9150509250929050565b60008060008060408587031215611c4f57600080fd5b843567ffffffffffffffff80821115611c6757600080fd5b611c7388838901611aea565b90965094506020870135915080821115611c8c57600080fd5b50611c9987828801611aea565b95989497509550505050565b600181811c90821680611cb957607f821691505b602082108103611cd957634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b600060208284031215611d1e57600080fd5b8151801515811461160157600080fd5b634e487b7160e01b600052603260045260246000fd5b600060018201611d6457634e487b7160e01b600052601160045260246000fd5b5060010190565b8183526000602080850194508260005b85811015611da7576001600160a01b03611d94836119c8565b1687529582019590820190600101611d7b565b509495945050505050565b81835260006001600160fb1b03831115611dcb57600080fd5b8260051b8083602087013760009401602001938452509192915050565b606081526000611dfc60608301888a611d6b565b8281036020840152611e0f818789611d6b565b90508281036040840152611e24818587611db2565b9998505050505050505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b604081526000611edd604083018688611d6b565b8281036020840152611862818587611db2565b600060208284031215611f0257600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611fb4818460208701611969565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206c49a5ee376afe69e171ad1c0e378eba2e740d2644acd5e9feed618749d6612464736f6c634300080d0033";

type TreasuryModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasuryModule__factory extends ContractFactory {
  constructor(...args: TreasuryModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasuryModule> {
    return super.deploy(overrides || {}) as Promise<TreasuryModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TreasuryModule {
    return super.attach(address) as TreasuryModule;
  }
  override connect(signer: Signer): TreasuryModule__factory {
    return super.connect(signer) as TreasuryModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryModuleInterface {
    return new utils.Interface(_abi) as TreasuryModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasuryModule {
    return new Contract(address, _abi, signerOrProvider) as TreasuryModule;
  }
}
