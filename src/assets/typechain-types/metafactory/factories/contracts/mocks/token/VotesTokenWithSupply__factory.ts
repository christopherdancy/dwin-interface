/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VotesTokenWithSupply,
  VotesTokenWithSupplyInterface,
} from "../../../../contracts/mocks/token/VotesTokenWithSupply";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "hodlers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "allocations",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040516200290938038062002909833981016040819052620000359162000a63565b83838180604051806040016040528060018152602001603160f81b815250848481600390805190602001906200006d92919062000850565b5080516200008390600490602084019062000850565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919096012090529290925261012052506200012990506336372b0760e01b620001d1565b5060009050805b8351811015620001c5576200018484828151811062000153576200015362000b8c565b602002602001015184838151811062000170576200017062000b8c565b60200260200101516200025660201b60201c565b82818151811062000199576200019962000b8c565b602002602001015182620001ae919062000bb8565b915080620001bc8162000bd3565b91505062000130565b50505050505062000c45565b6001600160e01b03198082169003620002315760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064015b60405180910390fd5b6001600160e01b0319166000908152600a60205260409020805460ff19166001179055565b6200026d82826200027160201b62000a5a1760201c565b5050565b6200028882826200032460201b62000aea1760201c565b6001600160e01b036200029c620004138216565b1115620003055760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840162000228565b6200031e600962000bd56200041960201b17836200042e565b50505050565b6001600160a01b0382166200037c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000228565b806002600082825462000390919062000bb8565b90915550506001600160a01b03821660009081526020819052604081208054839290620003bf90849062000bb8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36200026d60008383620005e5565b60025490565b600062000427828462000bb8565b9392505050565b8254600090819080156200048057856200044a60018362000bef565b815481106200045d576200045d62000b8c565b60009182526020909120015464010000000090046001600160e01b031662000483565b60005b6001600160e01b031692506200049a83858760201c565b9150600081118015620004de57504386620004b760018462000bef565b81548110620004ca57620004ca62000b8c565b60009182526020909120015463ffffffff16145b156200055257620004fa82620005fd60201b62000be11760201c565b866200050860018462000bef565b815481106200051b576200051b62000b8c565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550620005d7565b85604051806040016040528062000574436200066c60201b62000c4e1760201c565b63ffffffff1681526020016200059585620005fd60201b62000be11760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b505050565b620005e0838383620006d360201b62000cb31760201c565b60006001600160e01b03821115620006685760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000228565b5090565b600063ffffffff821115620006685760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000228565b620006eb838383620005e060201b62000ce51760201c565b6001600160a01b03838116600090815260076020526040808220548584168352912054620005e0929182169116838183148015906200072a5750600081115b15620005e0576001600160a01b03831615620007b7576001600160a01b03831660009081526008602090815260408220829162000774919062000842901b62000cea17856200042e565b91509150846001600160a01b0316600080516020620028e98339815191528383604051620007ac929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615620005e0576001600160a01b038216600090815260086020908152604082208291620007fb919062000419901b62000bd517856200042e565b91509150836001600160a01b0316600080516020620028e9833981519152838360405162000833929190918252602082015260400190565b60405180910390a25050505050565b600062000427828462000bef565b8280546200085e9062000c09565b90600052602060002090601f016020900481019282620008825760008555620008cd565b82601f106200089d57805160ff1916838001178555620008cd565b82800160010185558215620008cd579182015b82811115620008cd578251825591602001919060010190620008b0565b50620006689291505b80821115620006685760008155600101620008d6565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200092d576200092d620008ec565b604052919050565b600082601f8301126200094757600080fd5b81516001600160401b03811115620009635762000963620008ec565b602062000979601f8301601f1916820162000902565b82815285828487010111156200098e57600080fd5b60005b83811015620009ae57858101830151828201840152820162000991565b83811115620009c05760008385840101525b5095945050505050565b60006001600160401b03821115620009e657620009e6620008ec565b5060051b60200190565b600082601f83011262000a0257600080fd5b8151602062000a1b62000a1583620009ca565b62000902565b82815260059290921b8401810191818101908684111562000a3b57600080fd5b8286015b8481101562000a58578051835291830191830162000a3f565b509695505050505050565b6000806000806080858703121562000a7a57600080fd5b84516001600160401b038082111562000a9257600080fd5b62000aa08883890162000935565b955060209150818701518181111562000ab857600080fd5b62000ac689828a0162000935565b95505060408701518181111562000adc57600080fd5b8701601f8101891362000aee57600080fd5b805162000aff62000a1582620009ca565b81815260059190911b8201840190848101908b83111562000b1f57600080fd5b928501925b8284101562000b565783516001600160a01b038116811462000b465760008081fd5b8252928501929085019062000b24565b60608b015190975094505050508082111562000b7157600080fd5b5062000b8087828801620009f0565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111562000bce5762000bce62000ba2565b500190565b60006001820162000be85762000be862000ba2565b5060010190565b60008282101562000c045762000c0462000ba2565b500390565b600181811c9082168062000c1e57607f821691505b60208210810362000c3f57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051611c5462000c9560003960006110ec0152600061113b015260006111160152600061106f01526000611099015260006110c30152611c546000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636fcfff45116100c3578063a457c2d71161007c578063a457c2d7146102ef578063a9059cbb14610302578063c3cda52014610315578063d505accf14610328578063dd62ed3e1461033b578063f1127ed81461034e57600080fd5b80636fcfff451461025d57806370a08231146102855780637ecebe00146102ae5780638e539e8c146102c157806395d89b41146102d45780639ab24eb0146102dc57600080fd5b8063313ce56711610115578063313ce567146101c75780633644e515146101d657806339509351146101de5780633a46b1a8146101f1578063587cde1e146102045780635c19a95c1461024857600080fd5b806301ffc9a71461015257806306fdde031461017a578063095ea7b31461018f57806318160ddd146101a257806323b872dd146101b4575b600080fd5b6101656101603660046118dc565b61038b565b60405190151581526020015b60405180910390f35b6101826103cb565b6040516101719190611906565b61016561019d366004611977565b61045d565b6002545b604051908152602001610171565b6101656101c23660046119a1565b610475565b60405160128152602001610171565b6101a6610499565b6101656101ec366004611977565b6104a8565b6101a66101ff366004611977565b6104ca565b6102306102123660046119dd565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b039091168152602001610171565b61025b6102563660046119dd565b610549565b005b61027061026b3660046119dd565b610556565b60405163ffffffff9091168152602001610171565b6101a66102933660046119dd565b6001600160a01b031660009081526020819052604090205490565b6101a66102bc3660046119dd565b610578565b6101a66102cf3660046119f8565b610596565b6101826105f2565b6101a66102ea3660046119dd565b610601565b6101656102fd366004611977565b610688565b610165610310366004611977565b610703565b61025b610323366004611a22565b610711565b61025b610336366004611a7a565b610847565b6101a6610349366004611ae4565b6109ab565b61036161035c366004611b17565b6109d6565b60408051825163ffffffff1681526020928301516001600160e01b03169281019290925201610171565b60006301ffc9a760e01b6001600160e01b0319831614806103c557506001600160e01b031982166000908152600a602052604090205460ff165b92915050565b6060600380546103da90611b57565b80601f016020809104026020016040519081016040528092919081815260200182805461040690611b57565b80156104535780601f1061042857610100808354040283529160200191610453565b820191906000526020600020905b81548152906001019060200180831161043657829003601f168201915b5050505050905090565b60003361046b818585610cf6565b5060019392505050565b600033610483858285610e1a565b61048e858585610e8e565b506001949350505050565b60006104a3611062565b905090565b60003361046b8185856104bb83836109ab565b6104c59190611ba1565b610cf6565b60004382106105205760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b03831660009081526008602052604090206105429083611189565b9392505050565b6105533382611246565b50565b6001600160a01b0381166000908152600860205260408120546103c590610c4e565b6001600160a01b0381166000908152600560205260408120546103c5565b60004382106105e75760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606401610517565b6103c5600983611189565b6060600480546103da90611b57565b6001600160a01b0381166000908152600860205260408120548015610675576001600160a01b0383166000908152600860205260409020610643600183611bb9565b8154811061065357610653611bd0565b60009182526020909120015464010000000090046001600160e01b0316610678565b60005b6001600160e01b03169392505050565b6000338161069682866109ab565b9050838110156106f65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610517565b61048e8286868403610cf6565b60003361046b818585610e8e565b834211156107615760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606401610517565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906107db906107d39060a001604051602081830303815290604052805190602001206112bf565b85858561130d565b90506107e681611335565b86146108345760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152606401610517565b61083e8188611246565b50505050505050565b834211156108975760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610517565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108c68c611335565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610921826112bf565b905060006109318287878761130d565b9050896001600160a01b0316816001600160a01b0316146109945760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610517565b61099f8a8a8a610cf6565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610a1a57610a1a611bd0565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610a648282610aea565b6002546001600160e01b031015610ad65760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401610517565b610ae46009610bd58361135d565b50505050565b6001600160a01b038216610b405760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610517565b8060026000828254610b529190611ba1565b90915550506001600160a01b03821660009081526020819052604081208054839290610b7f908490611ba1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610bd1600083836114d6565b5050565b60006105428284611ba1565b60006001600160e01b03821115610c4a5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401610517565b5090565b600063ffffffff821115610c4a5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610517565b6001600160a01b03838116600090815260076020526040808220548584168352912054610ce5929182169116836114e1565b505050565b60006105428284611bb9565b6001600160a01b038316610d585760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610517565b6001600160a01b038216610db95760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610517565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610e2684846109ab565b90506000198114610ae45781811015610e815760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610517565b610ae48484848403610cf6565b6001600160a01b038316610ef25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610517565b6001600160a01b038216610f545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610517565b6001600160a01b03831660009081526020819052604090205481811015610fcc5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610517565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611003908490611ba1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161104f91815260200190565b60405180910390a3610ae48484846114d6565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156110bb57507f000000000000000000000000000000000000000000000000000000000000000046145b156110e557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090815b818110156111ed5760006111a4828461161e565b9050848682815481106111b9576111b9611bd0565b60009182526020909120015463ffffffff1611156111d9578092506111e7565b6111e4816001611ba1565b91505b50611190565b811561123157846111ff600184611bb9565b8154811061120f5761120f611bd0565b60009182526020909120015464010000000090046001600160e01b0316611234565b60005b6001600160e01b031695945050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610ae48284836114e1565b60006103c56112cc611062565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061131e87878787611639565b9150915061132b81611726565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b8254600090819080156113a85785611376600183611bb9565b8154811061138657611386611bd0565b60009182526020909120015464010000000090046001600160e01b03166113ab565b60005b6001600160e01b031692506113c483858763ffffffff16565b9150600081118015611402575043866113de600184611bb9565b815481106113ee576113ee611bd0565b60009182526020909120015463ffffffff16145b156114625761141082610be1565b8661141c600184611bb9565b8154811061142c5761142c611bd0565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b031602179055506114cd565b85604051806040016040528061147743610c4e565b63ffffffff16815260200161148b85610be1565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b610ce5838383610cb3565b816001600160a01b0316836001600160a01b0316141580156115035750600081115b15610ce5576001600160a01b03831615611591576001600160a01b0383166000908152600860205260408120819061153e90610cea8561135d565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611586929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610ce5576001600160a01b038216600090815260086020526040812081906115c790610bd58561135d565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161160f929190918252602082015260400190565b60405180910390a25050505050565b600061162d6002848418611be6565b61054290848416611ba1565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611670575060009050600361171d565b8460ff16601b1415801561168857508460ff16601c14155b15611699575060009050600461171d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116ed573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117165760006001925092505061171d565b9150600090505b94509492505050565b600081600481111561173a5761173a611c08565b036117425750565b600181600481111561175657611756611c08565b036117a35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610517565b60028160048111156117b7576117b7611c08565b036118045760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610517565b600381600481111561181857611818611c08565b036118705760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610517565b600481600481111561188457611884611c08565b036105535760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610517565b6000602082840312156118ee57600080fd5b81356001600160e01b03198116811461054257600080fd5b600060208083528351808285015260005b8181101561193357858101830151858201604001528201611917565b81811115611945576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461197257600080fd5b919050565b6000806040838503121561198a57600080fd5b6119938361195b565b946020939093013593505050565b6000806000606084860312156119b657600080fd5b6119bf8461195b565b92506119cd6020850161195b565b9150604084013590509250925092565b6000602082840312156119ef57600080fd5b6105428261195b565b600060208284031215611a0a57600080fd5b5035919050565b803560ff8116811461197257600080fd5b60008060008060008060c08789031215611a3b57600080fd5b611a448761195b565b95506020870135945060408701359350611a6060608801611a11565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611a9557600080fd5b611a9e8861195b565b9650611aac6020890161195b565b95506040880135945060608801359350611ac860808901611a11565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611af757600080fd5b611b008361195b565b9150611b0e6020840161195b565b90509250929050565b60008060408385031215611b2a57600080fd5b611b338361195b565b9150602083013563ffffffff81168114611b4c57600080fd5b809150509250929050565b600181811c90821680611b6b57607f821691505b60208210810361135757634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611bb457611bb4611b8b565b500190565b600082821015611bcb57611bcb611b8b565b500390565b634e487b7160e01b600052603260045260246000fd5b600082611c0357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220aa32b5e3ab4529e98a17a849e2280ab34ca150333fb5fab292181f3c6b14f4e364736f6c634300080d0033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type VotesTokenWithSupplyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotesTokenWithSupplyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotesTokenWithSupply__factory extends ContractFactory {
  constructor(...args: VotesTokenWithSupplyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    hodlers: string[],
    allocations: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VotesTokenWithSupply> {
    return super.deploy(
      name,
      symbol,
      hodlers,
      allocations,
      overrides || {}
    ) as Promise<VotesTokenWithSupply>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    hodlers: string[],
    allocations: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      hodlers,
      allocations,
      overrides || {}
    );
  }
  override attach(address: string): VotesTokenWithSupply {
    return super.attach(address) as VotesTokenWithSupply;
  }
  override connect(signer: Signer): VotesTokenWithSupply__factory {
    return super.connect(signer) as VotesTokenWithSupply__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotesTokenWithSupplyInterface {
    return new utils.Interface(_abi) as VotesTokenWithSupplyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotesTokenWithSupply {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VotesTokenWithSupply;
  }
}
