/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TimelockUpgradeable,
  TimelockUpgradeableInterface,
} from "../../../../contracts/mocks/governor/TimelockUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "CallExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "predecessor",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "delay",
        type: "uint256",
      },
    ],
    name: "CallScheduled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "Cancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "MinDelayChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IAccessControlDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract IDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "predecessor",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "predecessor",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "hashOperationBatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minDelay",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isOperation",
    outputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isOperationDone",
    outputs: [
      {
        internalType: "bool",
        name: "done",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isOperationPending",
    outputs: [
      {
        internalType: "bool",
        name: "pending",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "isOperationReady",
    outputs: [
      {
        internalType: "bool",
        name: "ready",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "predecessor",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "delay",
        type: "uint256",
      },
    ],
    name: "scheduleBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDelay",
        type: "uint256",
      },
    ],
    name: "updateDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611f9d61004c6000396000818161060a01528181610653015281816106f20152818161073201526107c50152611f9d6000f3fe60806040526004361061012e5760003560e01c806352d1902d116100ab578063b1c5f4271161006f578063b1c5f42714610351578063c4d252f514610371578063c63c4e9b14610391578063d45c4435146103a7578063e38335e5146103d4578063f27a0c92146103e757600080fd5b806352d1902d146102ae578063584b153e146102d157806364d62353146102f15780638991255b146103115780638f2a0bb01461033157600080fd5b80632ab0f529116100f25780632ab0f5291461020b57806331d507501461023b5780633659cfe61461025b5780634162169f1461027b5780634f1ef2861461029b57600080fd5b806301ffc9a71461013a57806306fdde031461016f57806313007d551461019157806313bc9f20146101c95780631794bb3c146101e957600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061015a610155366004611660565b6103fc565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610433565b60405161016691906116b6565b34801561019d57600080fd5b506065546101b1906001600160a01b031681565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b5061015a6101e43660046116e9565b6104c5565b3480156101f557600080fd5b50610209610204366004611719565b6104eb565b005b34801561021757600080fd5b5061015a6102263660046116e9565b60009081526068602052604090205460011490565b34801561024757600080fd5b5061015a6102563660046116e9565b6105e7565b34801561026757600080fd5b50610209610276366004611755565b610600565b34801561028757600080fd5b50606a546101b1906001600160a01b031681565b6102096102a9366004611786565b6106e8565b3480156102ba57600080fd5b506102c36107b8565b604051908152602001610166565b3480156102dd57600080fd5b5061015a6102ec3660046116e9565b61086b565b3480156102fd57600080fd5b5061020961030c3660046116e9565b610882565b34801561031d57600080fd5b506066546101b1906001600160a01b031681565b34801561033d57600080fd5b5061020961034c366004611894565b6109c7565b34801561035d57600080fd5b506102c361036c366004611946565b610b8f565b34801561037d57600080fd5b5061020961038c3660046116e9565b610bd4565b34801561039d57600080fd5b506102c360695481565b3480156103b357600080fd5b506102c36103c23660046116e9565b60009081526068602052604090205490565b6102096103e2366004611946565b610d1f565b3480156103f357600080fd5b506069546102c3565b60006001600160e01b031982166314026af160e01b148061042d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060678054610442906119ef565b80601f016020809104026020016040519081016040528092919081815260200182805461046e906119ef565b80156104bb5780601f10610490576101008083540402835291602001916104bb565b820191906000526020600020905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b6000818152606860205260408120546001811180156104e45750428111155b9392505050565b60006104f76001610e9c565b9050801561050f576000805461ff0019166101001790555b61054184336040518060400160405280600f81526020016e54696d656c6f636b204d6f64756c6560881b815250610f29565b606a80546001600160a01b0319166001600160a01b03851617905560698290556040805160008152602081018490527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a180156105e1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60008181526068602052604081205481905b1192915050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106515760405162461bcd60e51b815260040161064890611a29565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661069a600080516020611f21833981519152546001600160a01b031690565b6001600160a01b0316146106c05760405162461bcd60e51b815260040161064890611a75565b6106c981610fa1565b604080516000808252602082019092526106e591839190611042565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107305760405162461bcd60e51b815260040161064890611a29565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610779600080516020611f21833981519152546001600160a01b031690565b6001600160a01b03161461079f5760405162461bcd60e51b815260040161064890611a75565b6107a882610fa1565b6107b482826001611042565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108585760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610648565b50600080516020611f2183398151915290565b6000818152606860205260408120546001906105f9565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd4906108c590339030906001600160e01b03196000351690600401611ac1565b602060405180830381865afa1580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109069190611aee565b6109235760405163ea8e4eb560e01b815260040160405180910390fd5b3330146109865760405162461bcd60e51b815260206004820152602b60248201527f54696d656c6f636b436f6e74726f6c6c65723a2063616c6c6572206d7573742060448201526a62652074696d656c6f636b60a81b6064820152608401610648565b60695460408051918252602082018390527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a1606955565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610a0a90339030906001600160e01b03196000351690600401611ac1565b602060405180830381865afa158015610a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4b9190611aee565b610a685760405163ea8e4eb560e01b815260040160405180910390fd5b878614610a875760405162461bcd60e51b815260040161064890611b10565b878414610aa65760405162461bcd60e51b815260040161064890611b10565b6000610ab88a8a8a8a8a8a8a8a610b8f565b9050610ac481836111ad565b60005b89811015610b825780827f4cf4410cc57040e44862ef0f45f3dd5a5e02db8eb8add648d4b0e236f1d07dca8d8d85818110610b0457610b04611b53565b9050602002016020810190610b199190611755565b8c8c86818110610b2b57610b2b611b53565b905060200201358b8b87818110610b4457610b44611b53565b9050602002810190610b569190611b69565b8b8a604051610b6a96959493929190611bd9565b60405180910390a3610b7b81611c2c565b9050610ac7565b5050505050505050505050565b60008888888888888888604051602001610bb0989796959493929190611d53565b60405160208183030381529060405280519060200120905098975050505050505050565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610c1790339030906001600160e01b03196000351690600401611ac1565b602060405180830381865afa158015610c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c589190611aee565b610c755760405163ea8e4eb560e01b815260040160405180910390fd5b610c7e8161086b565b610ce45760405162461bcd60e51b815260206004820152603160248201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e2063616044820152701b9b9bdd0818994818d85b98d95b1b1959607a1b6064820152608401610648565b6000818152606860205260408082208290555182917fbaa1eb22f2a492ba1a5fea61b8df4d27c6c8b5f3971e63bb58fa14ff72eedb7091a250565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610d6290339030906001600160e01b03196000351690600401611ac1565b602060405180830381865afa158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da39190611aee565b610dc05760405163ea8e4eb560e01b815260040160405180910390fd5b868514610ddf5760405162461bcd60e51b815260040161064890611b10565b868314610dfe5760405162461bcd60e51b815260040161064890611b10565b6000610e108989898989898989610b8f565b9050610e1c818461129c565b606a5460405163a516a5bf60e01b81526001600160a01b039091169063a516a5bf90610e56908c908c908c908c908c908c90600401611da7565b600060405180830381600087803b158015610e7057600080fd5b505af1158015610e84573d6000803e3d6000fd5b50505050610e9181611337565b505050505050505050565b60008054610100900460ff1615610ee3578160ff166001148015610ebf5750303b155b610edb5760405162461bcd60e51b815260040161064890611df0565b506000919050565b60005460ff808416911610610f0a5760405162461bcd60e51b815260040161064890611df0565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610f505760405162461bcd60e51b815260040161064890611e3e565b606580546001600160a01b038086166001600160a01b03199283161790925560668054928516929091169190911790558051610f939060679060208401906115c7565b50610f9c611370565b505050565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd490610fe490339030906001600160e01b03196000351690600401611ac1565b602060405180830381865afa158015611001573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110259190611aee565b6106e55760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561107557610f9c83611399565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110cf575060408051601f3d908101601f191682019092526110cc91810190611e89565b60015b6111325760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610648565b600080516020611f2183398151915281146111a15760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610648565b50610f9c838383611435565b6111b6826105e7565b1561121b5760405162461bcd60e51b815260206004820152602f60248201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e20616c60448201526e1c9958591e481cd8da19591d5b1959608a1b6064820152608401610648565b60695481101561127c5760405162461bcd60e51b815260206004820152602660248201527f54696d656c6f636b436f6e74726f6c6c65723a20696e73756666696369656e746044820152652064656c617960d01b6064820152608401610648565b6112868142611ea2565b6000928352606860205260409092209190915550565b6112a5826104c5565b6112c15760405162461bcd60e51b815260040161064890611eba565b8015806112dc57506000818152606860205260409020546001145b6107b45760405162461bcd60e51b815260206004820152602660248201527f54696d656c6f636b436f6e74726f6c6c65723a206d697373696e6720646570656044820152656e64656e637960d01b6064820152608401610648565b611340816104c5565b61135c5760405162461bcd60e51b815260040161064890611eba565b600090815260686020526040902060019055565b600054610100900460ff166113975760405162461bcd60e51b815260040161064890611e3e565b565b6001600160a01b0381163b6114065760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610648565b600080516020611f2183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61143e8361145a565b60008251118061144b5750805b15610f9c576105e1838361149a565b61146381611399565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6115025760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610648565b600080846001600160a01b03168460405161151d9190611f04565b600060405180830381855af49150503d8060008114611558576040519150601f19603f3d011682016040523d82523d6000602084013e61155d565b606091505b50915091506115858282604051806060016040528060278152602001611f416027913961158e565b95945050505050565b6060831561159d5750816104e4565b8251156115ad5782518084602001fd5b8160405162461bcd60e51b815260040161064891906116b6565b8280546115d3906119ef565b90600052602060002090601f0160209004810192826115f5576000855561163b565b82601f1061160e57805160ff191683800117855561163b565b8280016001018555821561163b579182015b8281111561163b578251825591602001919060010190611620565b5061164792915061164b565b5090565b5b80821115611647576000815560010161164c565b60006020828403121561167257600080fd5b81356001600160e01b0319811681146104e457600080fd5b60005b838110156116a557818101518382015260200161168d565b838111156105e15750506000910152565b60208152600082518060208401526116d581604085016020870161168a565b601f01601f19169190910160400192915050565b6000602082840312156116fb57600080fd5b5035919050565b80356001600160a01b0381168114610f2457600080fd5b60008060006060848603121561172e57600080fd5b61173784611702565b925061174560208501611702565b9150604084013590509250925092565b60006020828403121561176757600080fd5b6104e482611702565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561179957600080fd5b6117a283611702565b9150602083013567ffffffffffffffff808211156117bf57600080fd5b818501915085601f8301126117d357600080fd5b8135818111156117e5576117e5611770565b604051601f8201601f19908116603f0116810190838211818310171561180d5761180d611770565b8160405282815288602084870101111561182657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008083601f84011261185a57600080fd5b50813567ffffffffffffffff81111561187257600080fd5b6020830191508360208260051b850101111561188d57600080fd5b9250929050565b600080600080600080600080600060c08a8c0312156118b257600080fd5b893567ffffffffffffffff808211156118ca57600080fd5b6118d68d838e01611848565b909b50995060208c01359150808211156118ef57600080fd5b6118fb8d838e01611848565b909950975060408c013591508082111561191457600080fd5b506119218c828d01611848565b9a9d999c50979a969997986060880135976080810135975060a0013595509350505050565b60008060008060008060008060a0898b03121561196257600080fd5b883567ffffffffffffffff8082111561197a57600080fd5b6119868c838d01611848565b909a50985060208b013591508082111561199f57600080fd5b6119ab8c838d01611848565b909850965060408b01359150808211156119c457600080fd5b506119d18b828c01611848565b999c989b509699959896976060870135966080013595509350505050565b600181811c90821680611a0357607f821691505b602082108103611a2357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b600060208284031215611b0057600080fd5b815180151581146104e457600080fd5b60208082526023908201527f54696d656c6f636b436f6e74726f6c6c65723a206c656e677468206d69736d616040820152620e8c6d60eb1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611b8057600080fd5b83018035915067ffffffffffffffff821115611b9b57600080fd5b60200191503681900382131561188d57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038716815285602082015260a060408201526000611c0160a083018688611bb0565b60608301949094525060800152949350505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611c3e57611c3e611c16565b5060010190565b8183526000602080850194508260005b85811015611c81576001600160a01b03611c6e83611702565b1687529582019590820190600101611c55565b509495945050505050565b81835260006001600160fb1b03831115611ca557600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835260006020808501808196508560051b810191508460005b87811015611d465782840389528135601e19883603018112611cfd57600080fd5b8701803567ffffffffffffffff811115611d1657600080fd5b803603891315611d2557600080fd5b611d328682898501611bb0565b9a87019a9550505090840190600101611cdc565b5091979650505050505050565b60a081526000611d6760a083018a8c611c45565b8281036020840152611d7a81898b611c8c565b90508281036040840152611d8f818789611cc2565b60608401959095525050608001529695505050505050565b606081526000611dbb60608301888a611c45565b8281036020840152611dce818789611c8c565b90508281036040840152611de3818587611cc2565b9998505050505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611e9b57600080fd5b5051919050565b60008219821115611eb557611eb5611c16565b500190565b6020808252602a908201527f54696d656c6f636b436f6e74726f6c6c65723a206f7065726174696f6e206973604082015269206e6f7420726561647960b01b606082015260800190565b60008251611f1681846020870161168a565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ecaa3179bd8e885bf08a20e574252bbcb909ffc5a805c3dd7ed7f56f4384324064736f6c634300080d0033";

type TimelockUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimelockUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimelockUpgradeable__factory extends ContractFactory {
  constructor(...args: TimelockUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimelockUpgradeable> {
    return super.deploy(overrides || {}) as Promise<TimelockUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TimelockUpgradeable {
    return super.attach(address) as TimelockUpgradeable;
  }
  override connect(signer: Signer): TimelockUpgradeable__factory {
    return super.connect(signer) as TimelockUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimelockUpgradeableInterface {
    return new utils.Interface(_abi) as TimelockUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimelockUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as TimelockUpgradeable;
  }
}
