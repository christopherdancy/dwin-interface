/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaFactory,
  MetaFactoryInterface,
} from "../../contracts/MetaFactory";

const _abi = [
  {
    inputs: [],
    name: "FactoryCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidModuleAddressToPass",
    type: "error",
  },
  {
    inputs: [],
    name: "UnequalArrayLengths",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "modules",
        type: "address[]",
      },
    ],
    name: "DAOAndModulesCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "daoFactory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "metaFactoryTempRoleIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "daoImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControlImplementation",
            type: "address",
          },
          {
            internalType: "string",
            name: "daoName",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "roles",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "rolesAdmins",
            type: "string[]",
          },
          {
            internalType: "address[][]",
            name: "members",
            type: "address[][]",
          },
          {
            internalType: "string[]",
            name: "daoFunctionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "daoActionRoles",
            type: "string[][]",
          },
        ],
        internalType: "struct IDAOFactory.CreateDAOParams",
        name: "createDAOParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "bytes[]",
            name: "data",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "newContractAddressesToPass",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "addressesReturned",
            type: "uint256",
          },
        ],
        internalType: "struct IMetaFactory.ModuleFactoryCallData[]",
        name: "moduleFactoriesCallData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256[]",
            name: "contractIndexes",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "functionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "roles",
            type: "string[][]",
          },
        ],
        internalType: "struct IMetaFactory.ModuleActionData",
        name: "moduleActionData",
        type: "tuple",
      },
      {
        internalType: "uint256[][]",
        name: "roleModuleMembers",
        type: "uint256[][]",
      },
    ],
    name: "createDAOAndModules",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611dee806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063304a83ee14610063575b600080fd5b61004e610049366004610fa3565b610083565b60405190151581526020015b60405180910390f35b610076610071366004611782565b6100ba565b60405161005a919061188b565b60006001600160e01b0319821663182541f760e11b14806100b457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6020820151518251516060911415806100da575060408301515183515114155b806100eb5750815185608001515114155b15610109576040516311e86f7360e01b815260040160405180910390fd5b8351600260005b8281101561014b5786818151811061012a5761012a61189e565b6020026020010151608001518261014191906118ca565b9150600101610110565b506000816001600160401b0381111561016657610166610ffc565b60405190808252806020026020018201604052801561018f578160200160208202803683370190505b50905060008860c001518a815181106101aa576101aa61189e565b602002602001015151905060008160016101c491906118ca565b6001600160401b038111156101db576101db610ffc565b604051908082528060200260200182016040528015610204578160200160208202803683370190505b50905060005b8281101561027b578a60c001518c815181106102285761022861189e565b602002602001015181815181106102415761024161189e565b602002602001015182828151811061025b5761025b61189e565b6001600160a01b039092166020928302919091019091015260010161020a565b503081838151811061028f5761028f61189e565b60200260200101906001600160a01b031690816001600160a01b031681525050808a60c001518c815181106102c6576102c661189e565b60200260200101819052506000808d6001600160a01b0316631009caf2338e6040518363ffffffff1660e01b8152600401610302929190611a60565b60408051808303816000875af1158015610320573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103449190611b78565b91509150818560008151811061035c5761035c61189e565b60200260200101906001600160a01b031690816001600160a01b03168152505080856001815181106103905761039061189e565b60200260200101906001600160a01b031690816001600160a01b0316815250506103ba858c6105a4565b94506103c68a866109d3565b6103d58c608001518a87610c64565b846001815181106103e8576103e861189e565b60200260200101516001600160a01b031663a1e6ab9f8d608001518f815181106104145761041461189e565b6020026020010151306040518363ffffffff1660e01b815260040161043a929190611bb2565b600060405180830381600087803b15801561045457600080fd5b505af1158015610468573d6000803e3d6000fd5b5050505060006002865161047c9190611bdc565b6001600160401b0381111561049357610493610ffc565b6040519080825280602002602001820160405280156104bc578160200160208202803683370190505b50905060005b815181101561052157866104d78260026118ca565b815181106104e7576104e761189e565b60200260200101518282815181106105015761050161189e565b6001600160a01b03909216602092830291909101909101526001016104c2565b507f64f3ddfe41c125867960880cd7a6e05e253a18137a283f8598cda84184fc2521866000815181106105565761055661189e565b6020026020010151876001815181106105715761057161189e565b60200260200101518360405161058993929190611bf3565b60405180910390a150939d9c50505050505050505050505050565b6060600260005b83518110156109ca5760008482815181106105c8576105c861189e565b6020026020010151606001515190506000818684815181106105ec576105ec61189e565b6020026020010151602001515161060391906118ca565b6001600160401b0381111561061a5761061a610ffc565b60405190808252806020026020018201604052801561064d57816020015b60608152602001906001900390816106385790505b50905060005b8281101561075e576106668460026118ca565b8785815181106106785761067861189e565b60200260200101516060015182815181106106955761069561189e565b6020026020010151106106bb5760405163025fe3cd60e21b815260040160405180910390fd5b878785815181106106ce576106ce61189e565b60200260200101516060015182815181106106eb576106eb61189e565b6020026020010151815181106107035761070361189e565b602002602001015160405160200161072a91906001600160a01b0391909116815260200190565b60405160208183030381529060405282828151811061074b5761074b61189e565b6020908102919091010152600101610653565b5060005b8684815181106107745761077461189e565b602002602001015160200151518110156107ef5786848151811061079a5761079a61189e565b60200260200101516020015181815181106107b7576107b761189e565b60200260200101518284836107cc91906118ca565b815181106107dc576107dc61189e565b6020908102919091010152600101610762565b506000808785815181106108055761080561189e565b6020026020010151600001516001600160a01b031688868151811061082c5761082c61189e565b602002602001015160400151846040516024016108499190611c28565b60408051601f198184030181529181526020820180516001600160e01b0316631959b87360e31b1790525161087e9190611c3b565b60006040518083038185875af1925050503d80600081146108bb576040519150601f19603f3d011682016040523d82523d6000602084013e6108c0565b606091505b5091509150816108e357604051637141390560e11b815260040160405180910390fd5b60008886815181106108f7576108f761189e565b6020026020010151608001516001600160401b0381111561091a5761091a610ffc565b604051908082528060200260200182016040528015610943578160200160208202803683370190505b5090508180602001905181019061095a9190611c57565b905060005b81518110156109b85781818151811061097a5761097a61189e565b60200260200101518b89815181106109945761099461189e565b6001600160a01b03909216602092830291909101909101526001978801970161095f565b5050600190940193506105ab92505050565b50929392505050565b8151516000816001600160401b038111156109f0576109f0610ffc565b604051908082528060200260200182016040528015610a19578160200160208202803683370190505b50905060005b82811015610a90578385600001518281518110610a3e57610a3e61189e565b602002602001015181518110610a5657610a5661189e565b6020026020010151828281518110610a7057610a7061189e565b6001600160a01b0390921660209283029190910190910152600101610a1f565b5060008185602001518660400151604051602401610ab093929190611cf0565b60408051601f19818403018152918152602080830180516001600160e01b03166334e7dc6560e11b1790528151600180825281840190935292935060009291908281019080368337505060408051600180825281830190925292935060009291506020808301908036833750506040805160018082528183019092529293506000929150602082015b6060815260200190600190039081610b3957905050905086600181518110610b6357610b6361189e565b602002602001015183600081518110610b7e57610b7e61189e565b60200260200101906001600160a01b031690816001600160a01b031681525050600082600081518110610bb357610bb361189e565b6020026020010181815250508381600081518110610bd357610bd361189e565b602002602001018190525086600081518110610bf157610bf161189e565b60200260200101516001600160a01b031663a516a5bf8484846040518463ffffffff1660e01b8152600401610c2893929190611d29565b600060405180830381600087803b158015610c4257600080fd5b505af1158015610c56573d6000803e3d6000fd5b505050505050505050505050565b81516000816001600160401b03811115610c8057610c80610ffc565b604051908082528060200260200182016040528015610cb357816020015b6060815260200190600190039081610c9e5790505b50905060005b82811015610dd8576000858281518110610cd557610cd561189e565b60200260200101515190506000816001600160401b03811115610cfa57610cfa610ffc565b604051908082528060200260200182016040528015610d23578160200160208202803683370190505b50905060005b82811015610daf5786888581518110610d4457610d4461189e565b60200260200101518281518110610d5d57610d5d61189e565b602002602001015181518110610d7557610d7561189e565b6020026020010151828281518110610d8f57610d8f61189e565b6001600160a01b0390921660209283029190910190910152600101610d29565b5080848481518110610dc357610dc361189e565b60209081029190910101525050600101610cb9565b5060008582604051602401610dee929190611d93565b60408051601f19818403018152918152602080830180516001600160e01b0316632359caf960e01b1790528151600180825281840190935292935060009291908281019080368337505060408051600180825281830190925292935060009291506020808301908036833750506040805160018082528183019092529293506000929150602082015b6060815260200190600190039081610e7757905050905086600181518110610ea157610ea161189e565b602002602001015183600081518110610ebc57610ebc61189e565b60200260200101906001600160a01b031690816001600160a01b031681525050600082600081518110610ef157610ef161189e565b6020026020010181815250508381600081518110610f1157610f1161189e565b602002602001018190525086600081518110610f2f57610f2f61189e565b60200260200101516001600160a01b031663a516a5bf8484846040518463ffffffff1660e01b8152600401610f6693929190611d29565b600060405180830381600087803b158015610f8057600080fd5b505af1158015610f94573d6000803e3d6000fd5b50505050505050505050505050565b600060208284031215610fb557600080fd5b81356001600160e01b031981168114610fcd57600080fd5b9392505050565b6001600160a01b0381168114610fe957600080fd5b50565b8035610ff781610fd4565b919050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b038111828210171561103557611035610ffc565b60405290565b60405160a081016001600160401b038111828210171561103557611035610ffc565b604051601f8201601f191681016001600160401b038111828210171561108557611085610ffc565b604052919050565b60006001600160401b038311156110a6576110a6610ffc565b6110b9601f8401601f191660200161105d565b90508281528383830111156110cd57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126110f557600080fd5b610fcd8383356020850161108d565b60006001600160401b0382111561111d5761111d610ffc565b5060051b60200190565b600082601f83011261113857600080fd5b8135602061114d61114883611104565b61105d565b82815260059290921b8401810191818101908684111561116c57600080fd5b8286015b848110156111ab5780356001600160401b0381111561118f5760008081fd5b61119d8986838b01016110e4565b845250918301918301611170565b509695505050505050565b600082601f8301126111c757600080fd5b813560206111d761114883611104565b828152600592831b85018201928282019190878511156111f657600080fd5b8387015b858110156112955780356001600160401b038111156112195760008081fd5b8801603f81018a1361122b5760008081fd5b85810135604061123d61114883611104565b82815291851b8301810191888101908d84111561125a5760008081fd5b938201935b83851015611284578435925061127483610fd4565b828252938901939089019061125f565b8852505050938501935084016111fa565b5090979650505050505050565b600082601f8301126112b357600080fd5b813560206112c361114883611104565b82815260059290921b840181019181810190868411156112e257600080fd5b8286015b848110156111ab5780356001600160401b038111156113055760008081fd5b6113138986838b0101611127565b8452509183019183016112e6565b6000610120828403121561133457600080fd5b61133c611012565b905061134782610fec565b815261135560208301610fec565b602082015261136660408301610fec565b604082015260608201356001600160401b038082111561138557600080fd5b611391858386016110e4565b606084015260808401359150808211156113aa57600080fd5b6113b685838601611127565b608084015260a08401359150808211156113cf57600080fd5b6113db85838601611127565b60a084015260c08401359150808211156113f457600080fd5b611400858386016111b6565b60c084015260e084013591508082111561141957600080fd5b61142585838601611127565b60e08401526101009150818401358181111561144057600080fd5b61144c868287016112a2565b8385015250505092915050565b600082601f83011261146a57600080fd5b8135602061147a61114883611104565b82815260059290921b8401810191818101908684111561149957600080fd5b8286015b848110156111ab578035835291830191830161149d565b600082601f8301126114c557600080fd5b6114d26111488335611104565b82358082526020808301929160051b850101858111156114f157600080fd5b602085015b8181101561164a576001600160401b03808235111561151457600080fd5b8135870160a0818a03601f1901121561152c57600080fd5b61153461103b565b6115416020830135610fd4565b60208201358152826040830135111561155957600080fd5b604082013582018a603f82011261156f57600080fd5b61157f6111486020830135611104565b602082810135808352908201919060051b83016040018d8111156115a257600080fd5b604084015b818110156115f35787813511156115bd57600080fd5b8e605f8235870101126115cf57600080fd5b6115e58f8235870160408101359060600161108d565b8452602093840193016115a7565b50506020840152505060608201356040820152608082013583101561161757600080fd5b61162a8a60206080850135850101611459565b606082015260a091909101356080820152855250602093840193016114f6565b509095945050505050565b60006060828403121561166757600080fd5b604051606081016001600160401b03828210818311171561168a5761168a610ffc565b8160405282935084359150808211156116a257600080fd5b6116ae86838701611459565b835260208501359150808211156116c457600080fd5b6116d086838701611127565b602084015260408501359150808211156116e957600080fd5b506116f6858286016112a2565b6040830152505092915050565b600082601f83011261171457600080fd5b8135602061172461114883611104565b82815260059290921b8401810191818101908684111561174357600080fd5b8286015b848110156111ab5780356001600160401b038111156117665760008081fd5b6117748986838b0101611459565b845250918301918301611747565b60008060008060008060c0878903121561179b57600080fd5b6117a487610fec565b95506020870135945060408701356001600160401b03808211156117c757600080fd5b6117d38a838b01611321565b955060608901359150808211156117e957600080fd5b6117f58a838b016114b4565b9450608089013591508082111561180b57600080fd5b6118178a838b01611655565b935060a089013591508082111561182d57600080fd5b5061183a89828a01611703565b9150509295509295509295565b600081518084526020808501945080840160005b838110156118805781516001600160a01b03168752958201959082019060010161185b565b509495945050505050565b602081526000610fcd6020830184611847565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156118dd576118dd6118b4565b500190565b60005b838110156118fd5781810151838201526020016118e5565b8381111561190c576000848401525b50505050565b6000815180845261192a8160208601602086016118e2565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015611986578284038952611974848351611912565b9885019893509084019060010161195c565b5091979650505050505050565b600081518084526020808501808196508360051b810191508286016000805b86811015611a0a578385038a52825180518087529087019087870190845b818110156119f55783516001600160a01b0316835292890192918901916001016119d0565b50509a87019a955050918501916001016119b2565b509298975050505050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015611986578284038952611a4e84835161193e565b98850198935090840190600101611a36565b6001600160a01b03831681526040602082018190528251611a8b918301906001600160a01b03169052565b60006020830151611aa760608401826001600160a01b03169052565b5060408301516001600160a01b03166080830152606083015161012060a08401819052611ad8610160850183611912565b91506080850151603f19808685030160c0870152611af6848361193e565b935060a08701519150808685030160e0870152611b13848361193e565b935060c08701519150610100818786030181880152611b328584611993565b945060e08801519250818786030184880152611b4e858461193e565b94508088015193505080868503016101408701525050611b6e8282611a18565b9695505050505050565b60008060408385031215611b8b57600080fd5b8251611b9681610fd4565b6020840151909250611ba781610fd4565b809150509250929050565b604081526000611bc56040830185611912565b905060018060a01b03831660208301529392505050565b600082821015611bee57611bee6118b4565b500390565b6001600160a01b03848116825283166020820152606060408201819052600090611c1f90830184611847565b95945050505050565b602081526000610fcd602083018461193e565b60008251611c4d8184602087016118e2565b9190910192915050565b60006020808385031215611c6a57600080fd5b82516001600160401b03811115611c8057600080fd5b8301601f81018513611c9157600080fd5b8051611c9f61114882611104565b81815260059190911b82018301908381019087831115611cbe57600080fd5b928401925b82841015611ce5578351611cd681610fd4565b82529284019290840190611cc3565b979650505050505050565b606081526000611d036060830186611847565b8281036020840152611d15818661193e565b90508281036040840152611b6e8185611a18565b606081526000611d3c6060830186611847565b82810360208481019190915285518083528682019282019060005b81811015611d7357845183529383019391830191600101611d57565b50508481036040860152611d87818761193e565b98975050505050505050565b604081526000611da6604083018561193e565b8281036020840152611c1f818561199356fea26469706673582212200b0344077085d4770ec3ecb961872897a5c27d16aa5ded98665cccb8e0f46d9e64736f6c634300080d0033";

type MetaFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaFactory__factory extends ContractFactory {
  constructor(...args: MetaFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaFactory> {
    return super.deploy(overrides || {}) as Promise<MetaFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetaFactory {
    return super.attach(address) as MetaFactory;
  }
  override connect(signer: Signer): MetaFactory__factory {
    return super.connect(signer) as MetaFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaFactoryInterface {
    return new utils.Interface(_abi) as MetaFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaFactory {
    return new Contract(address, _abi, signerOrProvider) as MetaFactory;
  }
}
