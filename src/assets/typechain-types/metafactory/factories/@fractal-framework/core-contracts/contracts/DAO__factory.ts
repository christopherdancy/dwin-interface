/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DAO,
  DAOInterface,
} from "../../../../@fractal-framework/core-contracts/contracts/DAO";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnequalArrayLengths",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IAccessControlDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_moduleFactoryBase",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161156961004c60003960008181610299015281816102e20152818161043301528181610473015261050601526115696000f3fe6080604052600436106100865760003560e01c80634571e3a6116100595780634571e3a61461013c5780634f1ef2861461015c57806352d1902d1461016f5780638991255b14610192578063a516a5bf146101b257600080fd5b806301ffc9a71461008b57806306fdde03146100c057806313007d55146100e25780633659cfe61461011a575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610e0d565b6101d2565b60405190151581526020015b60405180910390f35b3480156100cc57600080fd5b506100d56101fd565b6040516100b79190610e63565b3480156100ee57600080fd5b50606554610102906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b34801561012657600080fd5b5061013a610135366004610ead565b61028f565b005b34801561014857600080fd5b5061013a610157366004610ec8565b610377565b61013a61016a366004610f6c565b610429565b34801561017b57600080fd5b506101846104f9565b6040519081526020016100b7565b34801561019e57600080fd5b50606654610102906001600160a01b031681565b3480156101be57600080fd5b5061013a6101cd36600461107a565b6105ac565b60006001600160e01b0319821663e067461960e01b14806101f757506101f7826107ca565b92915050565b60606067805461020c90611114565b80601f016020809104026020016040519081016040528092919081815260200182805461023890611114565b80156102855780601f1061025a57610100808354040283529160200191610285565b820191906000526020600020905b81548152906001019060200180831161026857829003601f168201915b5050505050905090565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102e05760405162461bcd60e51b81526004016102d79061114e565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103296000805160206114ed833981519152546001600160a01b031690565b6001600160a01b03161461034f5760405162461bcd60e51b81526004016102d79061119a565b610358816107ff565b60408051600080825260208201909252610374918391906108a0565b50565b60006103836001610a10565b9050801561039b576000805461ff0019166101001790555b6103dc858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a9d92505050565b8015610422576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104715760405162461bcd60e51b81526004016102d79061114e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104ba6000805160206114ed833981519152546001600160a01b031690565b6001600160a01b0316146104e05760405162461bcd60e51b81526004016102d79061119a565b6104e9826107ff565b6104f5828260016108a0565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105995760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016102d7565b506000805160206114ed83398151915290565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd4906105ef90339030906001600160e01b031960003516906004016111e6565b602060405180830381865afa15801561060c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106309190611213565b61064d5760405163ea8e4eb560e01b815260040160405180910390fd5b848314158061065c5750848114155b1561067a576040516311e86f7360e01b815260040160405180910390fd5b60006040518060600160405280602281526020016114cb6022913990508560005b8181101561077e576000808a8a848181106106b8576106b8611235565b90506020020160208101906106cd9190610ead565b6001600160a01b03168989858181106106e8576106e8611235565b9050602002013588888681811061070157610701611235565b9050602002810190610713919061124b565b604051610721929190611292565b60006040518083038185875af1925050503d806000811461075e576040519150601f19603f3d011682016040523d82523d6000602084013e610763565b606091505b5091509150610773828287610b10565b50505060010161069b565b507f56bfe74cbe37ff0615c4d027adf14b7793c59322d51411a0f5a26eb77abac0958888888888886040516107b89695949392919061135c565b60405180910390a15050505050505050565b60006001600160e01b031982166314026af160e01b14806101f757506301ffc9a760e01b6001600160e01b03198316146101f7565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061084290339030906001600160e01b031960003516906004016111e6565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190611213565b6103745760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156108d8576108d383610b50565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610932575060408051601f3d908101601f1916820190925261092f918101906113fc565b60015b6109955760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016102d7565b6000805160206114ed8339815191528114610a045760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016102d7565b506108d3838383610bec565b60008054610100900460ff1615610a57578160ff166001148015610a335750303b155b610a4f5760405162461bcd60e51b81526004016102d790611415565b506000919050565b60005460ff808416911610610a7e5760405162461bcd60e51b81526004016102d790611415565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610ac45760405162461bcd60e51b81526004016102d790611463565b606580546001600160a01b038086166001600160a01b03199283161790925560668054928516929091169190911790558051610b07906067906020840190610d74565b506108d3610c17565b60608315610b1f575081610b49565b825115610b2f5782518084602001fd5b8160405162461bcd60e51b81526004016102d79190610e63565b9392505050565b6001600160a01b0381163b610bbd5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102d7565b6000805160206114ed83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610bf583610c40565b600082511180610c025750805b156108d357610c118383610c80565b50505050565b600054610100900460ff16610c3e5760405162461bcd60e51b81526004016102d790611463565b565b610c4981610b50565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610ce85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102d7565b600080846001600160a01b031684604051610d0391906114ae565b600060405180830381855af49150503d8060008114610d3e576040519150601f19603f3d011682016040523d82523d6000602084013e610d43565b606091505b5091509150610d6b828260405180606001604052806027815260200161150d60279139610b10565b95945050505050565b828054610d8090611114565b90600052602060002090601f016020900481019282610da25760008555610de8565b82601f10610dbb57805160ff1916838001178555610de8565b82800160010185558215610de8579182015b82811115610de8578251825591602001919060010190610dcd565b50610df4929150610df8565b5090565b5b80821115610df45760008155600101610df9565b600060208284031215610e1f57600080fd5b81356001600160e01b031981168114610b4957600080fd5b60005b83811015610e52578181015183820152602001610e3a565b83811115610c115750506000910152565b6020815260008251806020840152610e82816040850160208701610e37565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610a9857600080fd5b600060208284031215610ebf57600080fd5b610b4982610e96565b60008060008060608587031215610ede57600080fd5b610ee785610e96565b9350610ef560208601610e96565b9250604085013567ffffffffffffffff80821115610f1257600080fd5b818701915087601f830112610f2657600080fd5b813581811115610f3557600080fd5b886020828501011115610f4757600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610f7f57600080fd5b610f8883610e96565b9150602083013567ffffffffffffffff80821115610fa557600080fd5b818501915085601f830112610fb957600080fd5b813581811115610fcb57610fcb610f56565b604051601f8201601f19908116603f01168101908382118183101715610ff357610ff3610f56565b8160405282815288602084870101111561100c57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008083601f84011261104057600080fd5b50813567ffffffffffffffff81111561105857600080fd5b6020830191508360208260051b850101111561107357600080fd5b9250929050565b6000806000806000806060878903121561109357600080fd5b863567ffffffffffffffff808211156110ab57600080fd5b6110b78a838b0161102e565b909850965060208901359150808211156110d057600080fd5b6110dc8a838b0161102e565b909650945060408901359150808211156110f557600080fd5b5061110289828a0161102e565b979a9699509497509295939492505050565b600181811c9082168061112857607f821691505b60208210810361114857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b60006020828403121561122557600080fd5b81518015158114610b4957600080fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261126257600080fd5b83018035915067ffffffffffffffff82111561127d57600080fd5b60200191503681900382131561107357600080fd5b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b8781101561134f5782840389528135601e1988360301811261130657600080fd5b8701803567ffffffffffffffff81111561131f57600080fd5b80360389131561132e57600080fd5b61133b86828985016112a2565b9a87019a95505050908401906001016112e5565b5091979650505050505050565b6060808252810186905260008760808301825b8981101561139d576001600160a01b0361138884610e96565b1682526020928301929091019060010161136f565b5083810360208501528681526001600160fb1b038711156113bd57600080fd5b8660051b915081886020830137818101915050602081016000815260208483030160408501526113ee8186886112cb565b9a9950505050505050505050565b60006020828403121561140e57600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516114c0818460208701610e37565b919091019291505056fe44414f3a2063616c6c20726576657274656420776974686f7574206d657373616765360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122049f25de95731c2fd3186be5a92b68dab83716f96ce5e541a0853f19f2ce2c5e964736f6c634300080d0033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAO> {
    return super.deploy(overrides || {}) as Promise<DAO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
