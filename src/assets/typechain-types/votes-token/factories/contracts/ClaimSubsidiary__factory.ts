/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClaimSubsidiary,
  ClaimSubsidiaryInterface,
} from "../../contracts/ClaimSubsidiary";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pAllocation",
        type: "uint256",
      },
    ],
    name: "SnapAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SnapClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IDAOAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cTokenInfo",
    outputs: [
      {
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "snapId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pAllocation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "calculateClaimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "cTokenAllocation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "claimSnap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pAllocation",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516117cd61004c6000396000818161037a015281816103c3015281816105f00152818161063001526106c301526117cd6000f3fe6080604052600436106100a75760003560e01c80634f1ef286116100645780634f1ef286146101e857806352d1902d146101fb57806369e527da1461021e5780638991255b1461023e578063a40d1cbd1461025e578063f7013ef61461027e57600080fd5b806301ffc9a7146100ac57806306fdde03146100e157806313007d55146101035780633659cfe61461013b5780633d6a7c4c1461015d5780634175428c146101c8575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004611399565b61029e565b60405190151581526020015b60405180910390f35b3480156100ed57600080fd5b506100f66102de565b6040516100d891906113ef565b34801561010f57600080fd5b50606654610123906001600160a01b031681565b6040516001600160a01b0390911681526020016100d8565b34801561014757600080fd5b5061015b61015636600461143e565b610370565b005b34801561016957600080fd5b506101a361017836600461143e565b606a602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b0390941684526020840192909252908201526060016100d8565b3480156101d457600080fd5b5061015b6101e336600461143e565b610458565b61015b6101f636600461146f565b6105e6565b34801561020757600080fd5b506102106106b6565b6040519081526020016100d8565b34801561022a57600080fd5b50606954610123906001600160a01b031681565b34801561024a57600080fd5b50606754610123906001600160a01b031681565b34801561026a57600080fd5b5061021061027936600461143e565b610769565b34801561028a57600080fd5b5061015b610299366004611531565b61089e565b60006301ffc9a760e01b6001600160e01b0319831614806102d857506001600160e01b0319821660009081526065602052604090205460ff165b92915050565b6060606880546102ed9061158d565b80601f01602080910402602001604051908101604052809291908181526020018280546103199061158d565b80156103665780601f1061033b57610100808354040283529160200191610366565b820191906000526020600020905b81548152906001019060200180831161034957829003601f168201915b5050505050905090565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103c15760405162461bcd60e51b81526004016103b8906115c7565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661040a600080516020611751833981519152546001600160a01b031690565b6001600160a01b0316146104305760405162461bcd60e51b81526004016103b890611613565b610439816109b7565b6040805160008082526020820190925261045591839190610a5b565b50565b600061046382610769565b9050600081116104c55760405162461bcd60e51b815260206004820152602760248201527f54686520636c61696d657220646f6573206e6f74206861766520616e20616c6c60448201526637b1b0ba34b7b760c91b60648201526084016103b8565b6069546001600160a01b039081166000908152606a60209081526040808320938616835260039093019052205460ff16156105425760405162461bcd60e51b815260206004820181905260248201527f5468697320616c6c6f636174696f6e20686173206265656e20636c61696d656460448201526064016103b8565b606980546001600160a01b039081166000908152606a6020908152604080832087851684526003019091529020805460ff19166001179055905461058891168383610bcb565b6069546001600160a01b039081166000818152606a60209081526040918290205491518581528685169492909216917f14598a46cf7d6b47beae636c879badc9ad239ea17ee5252fe6a365694a9c3596910160405180910390a45050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361062e5760405162461bcd60e51b81526004016103b8906115c7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610677600080516020611751833981519152546001600160a01b031690565b6001600160a01b03161461069d5760405162461bcd60e51b81526004016103b890611613565b6106a6826109b7565b6106b282826001610a5b565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107565760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103b8565b5060008051602061175183398151915290565b6069546001600160a01b039081166000908152606a60205260408082208054600191909101549151630981b24d60e41b81529293169163981b24d0916107b59160040190815260200190565b602060405180830381865afa1580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f6919061165f565b6069546001600160a01b039081166000908152606a60205260409081902060028101548154600190920154925163277166bf60e11b815287851660048201526024810193909352921690634ee2cd7e90604401602060405180830381865afa158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a919061165f565b6108949190611678565b6102d891906116a5565b600054610100900460ff166108b95760005460ff16156108bd565b303b155b6109205760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103b8565b600054610100900460ff16158015610942576000805461ffff19166101011790555b61097585336040518060400160405280601081526020016f436c61696d205375627369646961727960801b815250610c1d565b606980546001600160a01b0319166001600160a01b03851617905561099c86858585610ca0565b5080156109af576000805461ff00191690555b505050505050565b6066546040516001623b410b60e21b031981523360048201523060248201526000356001600160e01b03191660448201526001600160a01b039091169063ff12fbd490606401602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e91906116c7565b6104555760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610a9357610a8e83610e08565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610aed575060408051601f3d908101601f19168201909252610aea9181019061165f565b60015b610b505760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103b8565b6000805160206117518339815191528114610bbf5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103b8565b50610a8e838383610ea4565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a8e908490610ecf565b600054610100900460ff16610c445760405162461bcd60e51b81526004016103b8906116e9565b606680546001600160a01b038086166001600160a01b03199283161790925560678054928516929091169190911790558051610c87906068906020840190611300565b50610c90610fa1565b610a8e630afed1ab60e11b610fca565b6040516323b872dd60e01b81526001600160a01b03858116600483015230602483015260448201839052600091908416906323b872dd906064016020604051808303816000875af1158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d91906116c7565b50836001600160a01b031663d1dc72a36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d82919061165f565b6001600160a01b038481166000818152606a602090815260409182902080546001600160a01b031916948a16948517815560018101869055600201879055815193845283019190915281018490529091507f53c4c896b07481b6e7f9a43867bc6e836fd59da1ac604caedb1c097ce8e89bd59060600160405180910390a1949350505050565b6001600160a01b0381163b610e755760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103b8565b60008051602061175183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610ead83611049565b600082511180610eba5750805b15610a8e57610ec98383611089565b50505050565b6000610f24826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661117d9092919063ffffffff16565b805190915015610a8e5780806020019051810190610f4291906116c7565b610a8e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103b8565b600054610100900460ff16610fc85760405162461bcd60e51b81526004016103b8906116e9565b565b6001600160e01b031980821690036110245760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016103b8565b6001600160e01b0319166000908152606560205260409020805460ff19166001179055565b61105281610e08565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6110f15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103b8565b600080846001600160a01b03168460405161110c9190611734565b600060405180830381855af49150503d8060008114611147576040519150601f19603f3d011682016040523d82523d6000602084013e61114c565b606091505b5091509150611174828260405180606001604052806027815260200161177160279139611196565b95945050505050565b606061118c84846000856111cf565b90505b9392505050565b606083156111a557508161118f565b8251156111b55782518084602001fd5b8160405162461bcd60e51b81526004016103b891906113ef565b6060824710156112305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103b8565b6001600160a01b0385163b6112875760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103b8565b600080866001600160a01b031685876040516112a39190611734565b60006040518083038185875af1925050503d80600081146112e0576040519150601f19603f3d011682016040523d82523d6000602084013e6112e5565b606091505b50915091506112f5828286611196565b979650505050505050565b82805461130c9061158d565b90600052602060002090601f01602090048101928261132e5760008555611374565b82601f1061134757805160ff1916838001178555611374565b82800160010185558215611374579182015b82811115611374578251825591602001919060010190611359565b50611380929150611384565b5090565b5b808211156113805760008155600101611385565b6000602082840312156113ab57600080fd5b81356001600160e01b03198116811461118f57600080fd5b60005b838110156113de5781810151838201526020016113c6565b83811115610ec95750506000910152565b602081526000825180602084015261140e8160408501602087016113c3565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461143957600080fd5b919050565b60006020828403121561145057600080fd5b61118f82611422565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561148257600080fd5b61148b83611422565b9150602083013567ffffffffffffffff808211156114a857600080fd5b818501915085601f8301126114bc57600080fd5b8135818111156114ce576114ce611459565b604051601f8201601f19908116603f011681019083821181831017156114f6576114f6611459565b8160405282815288602084870101111561150f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080600060a0868803121561154957600080fd5b61155286611422565b945061156060208701611422565b935061156e60408701611422565b925061157c60608701611422565b949793965091946080013592915050565b600181811c908216806115a157607f821691505b6020821081036115c157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561167157600080fd5b5051919050565b60008160001904831182151516156116a057634e487b7160e01b600052601160045260246000fd5b500290565b6000826116c257634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156116d957600080fd5b8151801515811461118f57600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516117468184602087016113c3565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ddec8929032104fabf0e890e0fbdd7628ddf4cff37068afe36a4d68c01e675cc64736f6c634300080d0033";

type ClaimSubsidiaryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimSubsidiaryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimSubsidiary__factory extends ContractFactory {
  constructor(...args: ClaimSubsidiaryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClaimSubsidiary> {
    return super.deploy(overrides || {}) as Promise<ClaimSubsidiary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ClaimSubsidiary {
    return super.attach(address) as ClaimSubsidiary;
  }
  override connect(signer: Signer): ClaimSubsidiary__factory {
    return super.connect(signer) as ClaimSubsidiary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimSubsidiaryInterface {
    return new utils.Interface(_abi) as ClaimSubsidiaryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimSubsidiary {
    return new Contract(address, _abi, signerOrProvider) as ClaimSubsidiary;
  }
}
