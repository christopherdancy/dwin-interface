/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClaimSubsidiary,
  ClaimSubsidiaryInterface,
} from "../../contracts/ClaimSubsidiary";

const _abi = [
  {
    inputs: [],
    name: "AllocationClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoAllocation",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pAllocation",
        type: "uint256",
      },
    ],
    name: "SnapAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SnapClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IDAOAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "calculateClaimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "cTokenAllocation",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "claimSnap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pAllocation",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "snapId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161170761004c60003960008181610391015281816103da01528181610562015281816105a2015261063501526117076000f3fe6080604052600436106100dd5760003560e01c806352d1902d1161007f5780638991255b116100595780638991255b1461023f578063977477281461025f578063a40d1cbd14610275578063f7013ef61461029557600080fd5b806352d1902d146101ea57806358a06f07146101ff57806369e527da1461021f57600080fd5b80633659cfe6116100bb5780633659cfe6146101715780634175428c14610193578063466bbe81146101b35780634f1ef286146101d757600080fd5b806301ffc9a7146100e257806306fdde031461011757806313007d5514610139575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046112d3565b6102b5565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c6102f5565b60405161010e9190611329565b34801561014557600080fd5b50606654610159906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b34801561017d57600080fd5b5061019161018c366004611378565b610387565b005b34801561019f57600080fd5b506101916101ae366004611378565b61046f565b3480156101bf57600080fd5b506101c9606c5481565b60405190815260200161010e565b6101916101e53660046113a9565b610558565b3480156101f657600080fd5b506101c9610628565b34801561020b57600080fd5b50606a54610159906001600160a01b031681565b34801561022b57600080fd5b50606954610159906001600160a01b031681565b34801561024b57600080fd5b50606754610159906001600160a01b031681565b34801561026b57600080fd5b506101c9606b5481565b34801561028157600080fd5b506101c9610290366004611378565b6106db565b3480156102a157600080fd5b506101916102b036600461146b565b6107dc565b60006301ffc9a760e01b6001600160e01b0319831614806102ef57506001600160e01b0319821660009081526065602052604090205460ff165b92915050565b606060688054610304906114c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610330906114c7565b801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103d85760405162461bcd60e51b81526004016103cf90611501565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661042160008051602061168b833981519152546001600160a01b031690565b6001600160a01b0316146104475760405162461bcd60e51b81526004016103cf9061154d565b61045081610905565b6040805160008082526020820190925261046c918391906109a9565b50565b600061047a826106db565b90508060000361049d57604051632fc532ad60e11b815260040160405180910390fd5b6001600160a01b0382166000908152606d602052604090205460ff16156104d757604051638054d1f960e01b815260040160405180910390fd5b6001600160a01b038083166000908152606d60205260409020805460ff1916600117905560695461050a91168383610b19565b606954606a546040518381526001600160a01b038581169381169216907f14598a46cf7d6b47beae636c879badc9ad239ea17ee5252fe6a365694a9c35969060200160405180910390a45050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105a05760405162461bcd60e51b81526004016103cf90611501565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105e960008051602061168b833981519152546001600160a01b031690565b6001600160a01b03161461060f5760405162461bcd60e51b81526004016103cf9061154d565b61061882610905565b610624828260016109a9565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106c85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103cf565b5060008051602061168b83398151915290565b606a54606b54604051630981b24d60e41b815260048101919091526000916001600160a01b03169063981b24d090602401602060405180830381865afa158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074d9190611599565b606c54606a54606b5460405163277166bf60e11b81526001600160a01b0387811660048301526024820192909252911690634ee2cd7e90604401602060405180830381865afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190611599565b6107d291906115b2565b6102ef91906115df565b600054610100900460ff166107f75760005460ff16156107fb565b303b155b61085e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103cf565b600054610100900460ff16158015610880576000805461ffff19166101011790555b6108b385336040518060400160405280601081526020016f436c61696d205375627369646961727960801b815250610b6b565b6108c363127960c760e01b610bea565b606980546001600160a01b0319166001600160a01b0385161790556108ea86858585610c69565b5080156108fd576000805461ff00191690555b505050505050565b6066546040516001623b410b60e21b031981523360048201523060248201526000356001600160e01b03191660448201526001600160a01b039091169063ff12fbd490606401602060405180830381865afa158015610968573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098c9190611601565b61046c5760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156109e1576109dc83610dc1565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a3b575060408051601f3d908101601f19168201909252610a3891810190611599565b60015b610a9e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103cf565b60008051602061168b8339815191528114610b0d5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103cf565b506109dc838383610e5d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109dc908490610e88565b600054610100900460ff16610b925760405162461bcd60e51b81526004016103cf90611623565b606680546001600160a01b038086166001600160a01b03199283161790925560678054928516929091169190911790558051610bd590606890602084019061123a565b50610bde610f5a565b6109dc630afed1ab60e11b5b6001600160e01b03198082169003610c445760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016103cf565b6001600160e01b0319166000908152606560205260409020805460ff19166001179055565b6040516323b872dd60e01b81526001600160a01b03858116600483015230602483015260448201839052600091908416906323b872dd906064016020604051808303816000875af1158015610cc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce69190611601565b50836001600160a01b031663d1dc72a36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610d27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4b9190611599565b606a80546001600160a01b0319166001600160a01b03878116918217909255606b839055606c8590556040805191825291861660208201529081018490529091507f53c4c896b07481b6e7f9a43867bc6e836fd59da1ac604caedb1c097ce8e89bd59060600160405180910390a1949350505050565b6001600160a01b0381163b610e2e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103cf565b60008051602061168b83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610e6683610f83565b600082511180610e735750805b156109dc57610e828383610fc3565b50505050565b6000610edd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110b79092919063ffffffff16565b8051909150156109dc5780806020019051810190610efb9190611601565b6109dc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103cf565b600054610100900460ff16610f815760405162461bcd60e51b81526004016103cf90611623565b565b610f8c81610dc1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61102b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016103cf565b600080846001600160a01b031684604051611046919061166e565b600060405180830381855af49150503d8060008114611081576040519150601f19603f3d011682016040523d82523d6000602084013e611086565b606091505b50915091506110ae82826040518060600160405280602781526020016116ab602791396110d0565b95945050505050565b60606110c68484600085611109565b90505b9392505050565b606083156110df5750816110c9565b8251156110ef5782518084602001fd5b8160405162461bcd60e51b81526004016103cf9190611329565b60608247101561116a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103cf565b6001600160a01b0385163b6111c15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103cf565b600080866001600160a01b031685876040516111dd919061166e565b60006040518083038185875af1925050503d806000811461121a576040519150601f19603f3d011682016040523d82523d6000602084013e61121f565b606091505b509150915061122f8282866110d0565b979650505050505050565b828054611246906114c7565b90600052602060002090601f01602090048101928261126857600085556112ae565b82601f1061128157805160ff19168380011785556112ae565b828001600101855582156112ae579182015b828111156112ae578251825591602001919060010190611293565b506112ba9291506112be565b5090565b5b808211156112ba57600081556001016112bf565b6000602082840312156112e557600080fd5b81356001600160e01b0319811681146110c957600080fd5b60005b83811015611318578181015183820152602001611300565b83811115610e825750506000910152565b60208152600082518060208401526113488160408501602087016112fd565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461137357600080fd5b919050565b60006020828403121561138a57600080fd5b6110c98261135c565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156113bc57600080fd5b6113c58361135c565b9150602083013567ffffffffffffffff808211156113e257600080fd5b818501915085601f8301126113f657600080fd5b81358181111561140857611408611393565b604051601f8201601f19908116603f0116810190838211818310171561143057611430611393565b8160405282815288602084870101111561144957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080600060a0868803121561148357600080fd5b61148c8661135c565b945061149a6020870161135c565b93506114a86040870161135c565b92506114b66060870161135c565b949793965091946080013592915050565b600181811c908216806114db57607f821691505b6020821081036114fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000602082840312156115ab57600080fd5b5051919050565b60008160001904831182151516156115da57634e487b7160e01b600052601160045260246000fd5b500290565b6000826115fc57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561161357600080fd5b815180151581146110c957600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516116808184602087016112fd565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122066986a76d6612048442ffe1b301c3c7a229b0309dfac93fc504a39f63351a6e864736f6c634300080d0033";

type ClaimSubsidiaryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimSubsidiaryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimSubsidiary__factory extends ContractFactory {
  constructor(...args: ClaimSubsidiaryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClaimSubsidiary> {
    return super.deploy(overrides || {}) as Promise<ClaimSubsidiary>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ClaimSubsidiary {
    return super.attach(address) as ClaimSubsidiary;
  }
  override connect(signer: Signer): ClaimSubsidiary__factory {
    return super.connect(signer) as ClaimSubsidiary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimSubsidiaryInterface {
    return new utils.Interface(_abi) as ClaimSubsidiaryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimSubsidiary {
    return new Contract(address, _abi, signerOrProvider) as ClaimSubsidiary;
  }
}
