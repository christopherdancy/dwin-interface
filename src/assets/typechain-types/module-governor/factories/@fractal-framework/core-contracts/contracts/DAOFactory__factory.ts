/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DAOFactory,
  DAOFactoryInterface,
} from "../../../../@fractal-framework/core-contracts/contracts/DAOFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "DAOCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "daoImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControlImplementation",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "daoName",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "roles",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "rolesAdmins",
            type: "string[]",
          },
          {
            internalType: "address[][]",
            name: "members",
            type: "address[][]",
          },
          {
            internalType: "string[]",
            name: "daoFunctionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "daoActionRoles",
            type: "string[][]",
          },
        ],
        internalType: "struct IDAOFactory.CreateDAOParams",
        name: "createDAOParams",
        type: "tuple",
      },
    ],
    name: "createDAO",
    outputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610021635e13cf2b60e01b610026565b6100a9565b6001600160e01b031980821690036100845760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b6117a4806100b86000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806301ffc9a7146200003f5780635e13cf2b146200006b575b600080fd5b620000566200005036600462000602565b620000a3565b60405190151581526020015b60405180910390f35b620000826200007c36600462000652565b620000d1565b604080516001600160a01b0393841681529290911660208301520162000062565b60006001600160e01b03198216635e13cf2b60e01b1480620000cb5750620000cb8262000327565b92915050565b600080620000df8362000364565b9150620000f6620000f084620009d8565b6200043e565b905060006200010960e085018562000b23565b90506001600160401b03811115620001255762000125620006ac565b6040519080825280602002602001820160405280156200014f578160200160208202803683370190505b50905060005b6200016460e086018662000b23565b9050811015620001a5578382828151811062000184576200018462000b76565b6001600160a01b039092166020928302919091019091015260010162000155565b506001600160a01b038316634571e3a68330620001c6606089018962000b8c565b6040518563ffffffff1660e01b8152600401620001e7949392919062000bfe565b600060405180830381600087803b1580156200020257600080fd5b505af115801562000217573d6000803e3d6000fd5b5050506001600160a01b038316905063f9d68d8a846200023b608088018862000b23565b6200024a60a08a018a62000b23565b6200025960c08c018c62000b23565b896200026960e08f018f62000b23565b8f8061010001906200027c919062000b23565b6040518d63ffffffff1660e01b8152600401620002a59c9b9a9998979695949392919062000e20565b600060405180830381600087803b158015620002c057600080fd5b505af1158015620002d5573d6000803e3d6000fd5b50506040516001600160a01b03888116825233935085811692508616907f4db6ee38117e611315b34948f609eed3356f7c79be1c2e94a2a636a7e9599cf79060200160405180910390a4509250929050565b60006301ffc9a760e01b6001600160e01b031983161480620000cb5750506001600160e01b03191660009081526020819052604090205460ff1690565b604080516bffffffffffffffffffffffff193260601b166020820152466034820152908201356054820152600090620000cb9082906074016040516020818303038152906040528051906020012060405180602001620003c490620005f4565b601f1982820381018352601f90910116604052620003e6602087018762000f48565b604080516001600160a01b03909216602083015281810152600060608201526080015b60408051601f198184030181529082905262000429929160200162000fa4565b604051602081830303815290604052620004dd565b60408082015190516bffffffffffffffffffffffff193260601b1660208201524660348201526054810191909152600090620000cb9082906074016040516020818303038152906040528051906020012060405180602001620004a190620005f4565b601f1982820381018352601f9091011660408181526020888101516001600160a01b031690830152808201526000606082015260800162000409565b60008084471015620005365760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b8251600003620005895760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016200052d565b8383516020850187f590506001600160a01b038116620005ec5760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016200052d565b949350505050565b6107b18062000fbe83390190565b6000602082840312156200061557600080fd5b81356001600160e01b0319811681146200062e57600080fd5b9392505050565b80356001600160a01b03811681146200064d57600080fd5b919050565b600080604083850312156200066657600080fd5b620006718362000635565b915060208301356001600160401b038111156200068d57600080fd5b83016101208186031215620006a157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620006e857620006e8620006ac565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620007195762000719620006ac565b604052919050565b600082601f8301126200073357600080fd5b81356001600160401b038111156200074f576200074f620006ac565b62000764601f8201601f1916602001620006ee565b8181528460208386010111156200077a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b03821115620007b357620007b3620006ac565b5060051b60200190565b600082601f830112620007cf57600080fd5b81356020620007e8620007e28362000797565b620006ee565b82815260059290921b840181019181810190868411156200080857600080fd5b8286015b848110156200084c5780356001600160401b038111156200082d5760008081fd5b6200083d8986838b010162000721565b8452509183019183016200080c565b509695505050505050565b600082601f8301126200086957600080fd5b813560206200087c620007e28362000797565b828152600592831b85018201928282019190878511156200089c57600080fd5b8387015b85811015620009425780356001600160401b03811115620008c15760008081fd5b8801603f81018a13620008d45760008081fd5b858101356040620008e9620007e28362000797565b82815291851b8301810191888101908d841115620009075760008081fd5b938201935b838510156200093057620009208562000635565b825293890193908901906200090c565b885250505093850193508401620008a0565b5090979650505050505050565b600082601f8301126200096157600080fd5b8135602062000974620007e28362000797565b82815260059290921b840181019181810190868411156200099457600080fd5b8286015b848110156200084c5780356001600160401b03811115620009b95760008081fd5b620009c98986838b0101620007bd565b84525091830191830162000998565b60006101208236031215620009ec57600080fd5b620009f6620006c2565b62000a018362000635565b815262000a116020840162000635565b60208201526040830135604082015260608301356001600160401b038082111562000a3b57600080fd5b62000a493683870162000721565b6060840152608085013591508082111562000a6357600080fd5b62000a7136838701620007bd565b608084015260a085013591508082111562000a8b57600080fd5b62000a9936838701620007bd565b60a084015260c085013591508082111562000ab357600080fd5b62000ac13683870162000857565b60c084015260e085013591508082111562000adb57600080fd5b62000ae936838701620007bd565b60e08401526101009150818501358181111562000b0557600080fd5b62000b13368288016200094f565b8385015250505080915050919050565b6000808335601e1984360301811262000b3b57600080fd5b8301803591506001600160401b0382111562000b5657600080fd5b6020019150600581901b360382131562000b6f57600080fd5b9250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811262000ba457600080fd5b8301803591506001600160401b0382111562000bbf57600080fd5b60200191503681900382131562000b6f57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0385811682528416602082015260606040820181905260009062000c2d908301848662000bd5565b9695505050505050565b6000808335601e1984360301811262000c4f57600080fd5b83016020810192503590506001600160401b0381111562000c6f57600080fd5b80360383131562000b6f57600080fd5b81835260006020808501808196508560051b810191508460005b8781101562000cd557828403895262000cb3828862000c37565b62000cc086828462000bd5565b9a87019a955050509084019060010162000c99565b5091979650505050505050565b6000808335601e1984360301811262000cfa57600080fd5b83016020810192503590506001600160401b0381111562000d1a57600080fd5b8060051b360383131562000b6f57600080fd5b600081518084526020808501945080840160005b8381101562000d685781516001600160a01b03168752958201959082019060010162000d41565b509495945050505050565b81835260006020808501808196506005915085821b8101856000805b8981101562000e11578484038b5262000da9838a62000ce2565b80865288860181891b87018a0183865b8481101562000df957898303601f1901845262000dd7828762000c37565b62000de485828462000bd5565b958f019594505050908c019060010162000db9565b50509d8a019d96505050928701925060010162000d8f565b50919998505050505050505050565b6001600160a01b038d16815260e06020820181905260009062000e479083018d8f62000c7f565b828103604084015262000e5c818c8e62000c7f565b8381036060850152898152905060208082019060058b901b8301018b60005b8c81101562000eef57848303601f1901845262000e99828f62000ce2565b8085526020850160005b8281101562000ed5576001600160a01b0362000ebf8562000635565b1682526020938401939091019060010162000ea3565b506020968701969095509390930192505060010162000e7b565b5050848103608086015262000f05818b62000d2d565b9250505082810360a084015262000f1e81878962000c7f565b905082810360c084015262000f3581858762000d73565b9f9e505050505050505050505050505050565b60006020828403121562000f5b57600080fd5b6200062e8262000635565b6000815160005b8181101562000f89576020818501810151868301520162000f6d565b8181111562000f99576000828601525b509290920192915050565b6000620005ec62000fb6838662000f66565b8462000f6656fe60806040526040516107b13803806107b183398101604081905261002291610349565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610417565b60008051602061076a833981519152146100695761006961043c565b6100758282600061007c565b50506104a1565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610117838360405180606001604052806027815260200161078a602791396101de565b9392505050565b610131816102bc60201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061076a83398151915260001b6102cb60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b0316856040516102619190610452565b600060405180830381855af49150503d806000811461029c576040519150601f19603f3d011682016040523d82523d6000602084013e6102a1565b606091505b5090925090506102b28282866102ce565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102dd575081610117565b8251156102ed5782518084602001fd5b8160405162461bcd60e51b815260040161018f919061046e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610338578181015183820152602001610320565b838111156100ab5750506000910152565b6000806040838503121561035c57600080fd5b82516001600160a01b038116811461037357600080fd5b60208401519092506001600160401b038082111561039057600080fd5b818501915085601f8301126103a457600080fd5b8151818111156103b6576103b6610307565b604051601f8201601f19908116603f011681019083821181831017156103de576103de610307565b816040528281528860208487010111156103f757600080fd5b61040883602083016020880161031d565b80955050505050509250929050565b60008282101561043757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161046481846020870161031d565b9190910192915050565b602081526000825180602084015261048d81604085016020870161031d565b601f01601f19169190910160400192915050565b6102ba806104b06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c1396a395593415293023c3bc166734d52c4ee9136c6ff8eaef33568949ec5f064736f6c634300080d0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200e051968fc25f7ed35a735b8a04ee43923fc7afa7040db6fb0473f91b49fa50164736f6c634300080d0033";

type DAOFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOFactory__factory extends ContractFactory {
  constructor(...args: DAOFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAOFactory> {
    return super.deploy(overrides || {}) as Promise<DAOFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOFactory {
    return super.attach(address) as DAOFactory;
  }
  override connect(signer: Signer): DAOFactory__factory {
    return super.connect(signer) as DAOFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOFactoryInterface {
    return new utils.Interface(_abi) as DAOFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOFactory {
    return new Contract(address, _abi, signerOrProvider) as DAOFactory;
  }
}
