/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernorFactory,
  GovernorFactoryInterface,
} from "../../../contracts/Governor/GovernorFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "timelock",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "governorModule",
        type: "address",
      },
    ],
    name: "GovernorCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "semanticVersion",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "frontendURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "VersionCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_semanticVersion",
        type: "string",
      },
      {
        internalType: "string",
        name: "_frontendURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    name: "addVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "versionControl",
    outputs: [
      {
        internalType: "string",
        name: "semanticVersion",
        type: "string",
      },
      {
        internalType: "string",
        name: "frontendURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611d738061007e6000396000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c80638129fc1c11620000625780638129fc1c146200010d5780638da5cb5b1462000117578063d7bef6ce1462000133578063f2fde38b146200015b57600080fd5b806301ffc9a714620000985780634d4a76f514620000c45780636d81fc7214620000dd578063715018a61462000103575b600080fd5b620000af620000a936600462000fbe565b62000172565b60405190151581526020015b60405180910390f35b620000db620000d536600462001053565b620001b3565b005b620000f4620000ee366004620010e0565b6200032a565b604051620000bb91906200116f565b620000db6200049b565b620000db620004d6565b6000546040516001600160a01b039091168152602001620000bb565b6200014a62000144366004620011be565b620005b2565b604051620000bb9392919062001239565b620000db6200016c3660046200127b565b62000716565b60006301ffc9a760e01b6001600160e01b031983161480620001ad57506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b6000546001600160a01b03163314620001e95760405162461bcd60e51b8152600401620001e0906200129b565b60405180910390fd5b6040805160806020601f88018190040282018101909252606081018681526002928291908990899081908501838280828437600092019190915250505090825250604080516020601f88018190048102820181019092528681529181019190879087908190840183828082843760009201829052509385525050506001600160a01b0385166020928301528354600181018555938152819020825180519394600302909101926200029e928492019062000f0a565b506020828101518051620002b9926001850192019062000f0a565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055517f55333c8005b89ec35427ce0dee089bf2afe5d50fd45f9afd62478d8c299f9999906200031b9087908790879087908790620012f9565b60405180910390a15050505050565b60408051600280825260608083018452926000929190602083019080368337019050509050620003668562000360858762001389565b620007b5565b816001815181106200037c576200037c6200146e565b60200260200101906001600160a01b031690816001600160a01b031681525050620003d48582600181518110620003b757620003b76200146e565b6020026020010151868690620003ce919062001389565b620009e7565b81600081518110620003ea57620003ea6200146e565b60200260200101906001600160a01b031690816001600160a01b0316815250507fb6b3fe2c7fc656c523405911942be2fac1c0d67804bf2547f3fd7351574915ab816000815181106200044157620004416200146e565b6020026020010151826001815181106200045f576200045f6200146e565b60200260200101516040516200048b9291906001600160a01b0392831681529116602082015260400190565b60405180910390a1949350505050565b6000546001600160a01b03163314620004c85760405162461bcd60e51b8152600401620001e0906200129b565b620004d4600062000ca2565b565b600054600160a81b900460ff16620004fc57600054600160a01b900460ff161562000500565b303b155b620005655760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620001e0565b600054600160a81b900460ff1615801562000590576000805461ffff60a01b191661010160a01b1790555b6200059a62000cf2565b8015620005af576000805460ff60a81b191690555b50565b60028181548110620005c357600080fd5b9060005260206000209060030201600091509050806000018054620005e89062001484565b80601f0160208091040260200160405190810160405280929190818152602001828054620006169062001484565b8015620006675780601f106200063b5761010080835404028352916020019162000667565b820191906000526020600020905b8154815290600101906020018083116200064957829003601f168201915b5050505050908060010180546200067e9062001484565b80601f0160208091040260200160405190810160405280929190818152602001828054620006ac9062001484565b8015620006fd5780601f10620006d157610100808354040283529160200191620006fd565b820191906000526020600020905b815481529060010190602001808311620006df57829003601f168201915b505050600290930154919250506001600160a01b031683565b6000546001600160a01b03163314620007435760405162461bcd60e51b8152600401620001e0906200129b565b6001600160a01b038116620007aa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001e0565b620005af8162000ca2565b6000620008ce600084334686600b81518110620007d657620007d66200146e565b6020026020010151806020019051810190620007f39190620014c0565b604051602001620008089493929190620014da565b6040516020818303038152906040528051906020012060405180602001620008309062000f99565b6020820181038252601f19601f82011660405250856004815181106200085a576200085a6200146e565b60200260200101518060200190518101906200087791906200150d565b604080516001600160a01b039092166020830152818101526000606082015260800160408051601f1981840301815290829052620008b992916020016200152d565b60405160208183030381529060405262000d73565b9050806001600160a01b0316631794bb3c83600181518110620008f557620008f56200146e565b60200260200101518060200190518101906200091291906200150d565b846000815181106200092857620009286200146e565b60200260200101518060200190518101906200094591906200150d565b85600a815181106200095b576200095b6200146e565b6020026020010151806020019051810190620009789190620014c0565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015620009c857600080fd5b505af1158015620009dd573d6000803e3d6000fd5b5050505092915050565b600062000a8c600085334686600b8151811062000a085762000a086200146e565b602002602001015180602001905181019062000a259190620014c0565b60405160200162000a3a9493929190620014da565b604051602081830303815290604052805190602001206040518060200162000a629062000f99565b6020820181038252601f19601f82011660405250856003815181106200085a576200085a6200146e565b9050806001600160a01b03166358ae77ee8360028151811062000ab35762000ab36200146e565b602002602001015180602001905181019062000ad091906200150d565b858560058151811062000ae75762000ae76200146e565b602002602001015180602001905181019062000b04919062001560565b8660068151811062000b1a5762000b1a6200146e565b602002602001015180602001905181019062000b379190620014c0565b8760078151811062000b4d5762000b4d6200146e565b602002602001015180602001905181019062000b6a9190620014c0565b8860088151811062000b805762000b806200146e565b602002602001015180602001905181019062000b9d9190620014c0565b8960098151811062000bb35762000bb36200146e565b602002602001015180602001905181019062000bd09190620014c0565b8a60018151811062000be65762000be66200146e565b602002602001015180602001905181019062000c0391906200150d565b6040516001600160e01b031960e08b901b1681526001600160a01b039889166004820152968816602488015267ffffffffffffffff90951660448701526064860193909352608485019190915260a484015260c48301529190911660e482015261010401600060405180830381600087803b15801562000c8257600080fd5b505af115801562000c97573d6000803e3d6000fd5b505050509392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a81b900460ff1662000d615760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620001e0565b620004d46320cb8a8760e01b62000e86565b6000808447101562000dc85760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401620001e0565b825160000362000e1b5760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401620001e0565b8383516020850187f590506001600160a01b03811662000e7e5760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401620001e0565b949350505050565b6001600160e01b0319808216900362000ee25760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401620001e0565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b82805462000f189062001484565b90600052602060002090601f01602090048101928262000f3c576000855562000f87565b82601f1062000f5757805160ff191683800117855562000f87565b8280016001018555821562000f87579182015b8281111562000f8757825182559160200191906001019062000f6a565b5062000f9592915062000fa7565b5090565b6107b1806200158d83390190565b5b8082111562000f95576000815560010162000fa8565b60006020828403121562000fd157600080fd5b81356001600160e01b03198116811462000fea57600080fd5b9392505050565b60008083601f8401126200100457600080fd5b50813567ffffffffffffffff8111156200101d57600080fd5b6020830191508360208285010111156200103657600080fd5b9250929050565b6001600160a01b0381168114620005af57600080fd5b6000806000806000606086880312156200106c57600080fd5b853567ffffffffffffffff808211156200108557600080fd5b6200109389838a0162000ff1565b90975095506020880135915080821115620010ad57600080fd5b50620010bc8882890162000ff1565b9094509250506040860135620010d2816200103d565b809150509295509295909350565b600080600060408486031215620010f657600080fd5b833562001103816200103d565b9250602084013567ffffffffffffffff808211156200112157600080fd5b818601915086601f8301126200113657600080fd5b8135818111156200114657600080fd5b8760208260051b85010111156200115c57600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b81811015620011b25783516001600160a01b0316835292840192918401916001016200118b565b50909695505050505050565b600060208284031215620011d157600080fd5b5035919050565b60005b83811015620011f5578181015183820152602001620011db565b8381111562001205576000848401525b50505050565b6000815180845262001225816020860160208601620011d8565b601f01601f19169290920160200192915050565b6060815260006200124e60608301866200120b565b82810360208401526200126281866200120b565b91505060018060a01b0383166040830152949350505050565b6000602082840312156200128e57600080fd5b813562000fea816200103d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060815260006200130f606083018789620012d0565b828103602084015262001324818688620012d0565b91505060018060a01b03831660408301529695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200138157620013816200133f565b604052919050565b600067ffffffffffffffff80841115620013a757620013a76200133f565b8360051b6020620013ba81830162001355565b868152918501918181019036841115620013d357600080fd5b865b848110156200146257803586811115620013ef5760008081fd5b8801601f3681830112620014035760008081fd5b8135888111156200141857620014186200133f565b6200142b818301601f1916880162001355565b91508082523687828501011115620014435760008081fd5b80878401888401376000908201870152845250918301918301620013d5565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200149957607f821691505b602082108103620014ba57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215620014d357600080fd5b5051919050565b6bffffffffffffffffffffffff19606095861b811682529390941b90921660148401526028830152604882015260680190565b6000602082840312156200152057600080fd5b815162000fea816200103d565b6000835162001541818460208801620011d8565b83519083019062001557818360208801620011d8565b01949350505050565b6000602082840312156200157357600080fd5b815167ffffffffffffffff8116811462000fea57600080fdfe60806040526040516107b13803806107b183398101604081905261002291610349565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610417565b60008051602061076a833981519152146100695761006961043c565b6100758282600061007c565b50506104a1565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610117838360405180606001604052806027815260200161078a602791396101de565b9392505050565b610131816102bc60201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061076a83398151915260001b6102cb60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b0316856040516102619190610452565b600060405180830381855af49150503d806000811461029c576040519150601f19603f3d011682016040523d82523d6000602084013e6102a1565b606091505b5090925090506102b28282866102ce565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102dd575081610117565b8251156102ed5782518084602001fd5b8160405162461bcd60e51b815260040161018f919061046e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610338578181015183820152602001610320565b838111156100ab5750506000910152565b6000806040838503121561035c57600080fd5b82516001600160a01b038116811461037357600080fd5b60208401519092506001600160401b038082111561039057600080fd5b818501915085601f8301126103a457600080fd5b8151818111156103b6576103b6610307565b604051601f8201601f19908116603f011681019083821181831017156103de576103de610307565b816040528281528860208487010111156103f757600080fd5b61040883602083016020880161031d565b80955050505050509250929050565b60008282101561043757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161046481846020870161031d565b9190910192915050565b602081526000825180602084015261048d81604085016020870161031d565b601f01601f19169190910160400192915050565b6102ba806104b06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c1396a395593415293023c3bc166734d52c4ee9136c6ff8eaef33568949ec5f064736f6c634300080d0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201b655d63e0bbf82639d69f4e1c360310de8971a52f7a5ce02aa431c146e0c44e64736f6c634300080d0033";

type GovernorFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorFactory__factory extends ContractFactory {
  constructor(...args: GovernorFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernorFactory> {
    return super.deploy(overrides || {}) as Promise<GovernorFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernorFactory {
    return super.attach(address) as GovernorFactory;
  }
  override connect(signer: Signer): GovernorFactory__factory {
    return super.connect(signer) as GovernorFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorFactoryInterface {
    return new utils.Interface(_abi) as GovernorFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorFactory {
    return new Contract(address, _abi, signerOrProvider) as GovernorFactory;
  }
}
