/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TreasuryModuleFactory,
  TreasuryModuleFactoryInterface,
} from "../../contracts/TreasuryModuleFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasuryAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
    ],
    name: "TreasuryCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "semanticVersion",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "frontendURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    name: "VersionCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_semanticVersion",
        type: "string",
      },
      {
        internalType: "string",
        name: "_frontendURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    name: "addVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "versionControl",
    outputs: [
      {
        internalType: "string",
        name: "semanticVersion",
        type: "string",
      },
      {
        internalType: "string",
        name: "frontendURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61186d8061007e6000396000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c80638129fc1c11620000625780638129fc1c146200010d5780638da5cb5b1462000117578063d7bef6ce1462000133578063f2fde38b146200015b57600080fd5b806301ffc9a714620000985780634d4a76f514620000c45780636d81fc7214620000dd578063715018a61462000103575b600080fd5b620000af620000a936600462000c36565b62000172565b60405190151581526020015b60405180910390f35b620000db620000d536600462000ccb565b620001b3565b005b620000f4620000ee36600462000d58565b6200032a565b604051620000bb919062000de7565b620000db620005f3565b620000db6200062e565b6000546040516001600160a01b039091168152602001620000bb565b6200014a6200014436600462000e36565b6200071c565b604051620000bb9392919062000eb1565b620000db6200016c36600462000ef3565b62000880565b60006301ffc9a760e01b6001600160e01b031983161480620001ad57506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b6000546001600160a01b03163314620001e95760405162461bcd60e51b8152600401620001e09062000f13565b60405180910390fd5b6040805160806020601f88018190040282018101909252606081018681526002928291908990899081908501838280828437600092019190915250505090825250604080516020601f88018190048102820181019092528681529181019190879087908190840183828082843760009201829052509385525050506001600160a01b0385166020928301528354600181018555938152819020825180519394600302909101926200029e928492019062000b82565b506020828101518051620002b9926001850192019062000b82565b5060409182015160029190910180546001600160a01b0319166001600160a01b03909216919091179055517f55333c8005b89ec35427ce0dee089bf2afe5d50fd45f9afd62478d8c299f9999906200031b908790879087908790879062000f71565b60405180910390a15050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905060008484600081811062000368576200036862000fb7565b90506020028101906200037c919062000fcd565b8101906200038b919062000ef3565b9050600085856001818110620003a557620003a562000fb7565b9050602002810190620003b9919062000fcd565b810190620003c8919062000ef3565b9050600086866002818110620003e257620003e262000fb7565b9050602002810190620003f6919062000fcd565b81019062000405919062000e36565b6040516bffffffffffffffffffffffff1960608b811b8216602084015233901b16603482015246604882015260688101829052909150620004d59060009060880160405160208183030381529060405280519060200120604051806020016200046e9062000c11565b601f1982820381018352601f9091011660408181526001600160a01b0388166020830152808201526000606082015260800160408051601f1981840301815290829052620004c0929160200162001017565b6040516020818303038152906040526200091f565b84600081518110620004eb57620004eb62000fb7565b60200260200101906001600160a01b031690816001600160a01b0316815250508360008151811062000521576200052162000fb7565b602090810291909101015160405163189acdbd60e31b81526001600160a01b0385811660048301529091169063c4d66de890602401600060405180830381600087803b1580156200057157600080fd5b505af115801562000586573d6000803e3d6000fd5b50505050826001600160a01b031684600081518110620005aa57620005aa62000fb7565b60200260200101516001600160a01b03167fc66508a0af5b2cb3ca1697705aa93e894f4df91a54f28fc74262b7cd544b103560405160405180910390a350919695505050505050565b6000546001600160a01b03163314620006205760405162461bcd60e51b8152600401620001e09062000f13565b6200062c600062000a32565b565b600054600160a81b900460ff166200065457600054600160a01b900460ff161562000658565b303b155b620006bd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620001e0565b600054600160a81b900460ff16158015620006e8576000805461ffff60a01b191661010160a01b1790555b620006f262000a82565b6200070463204a7f0760e21b62000afe565b801562000719576000805460ff60a81b191690555b50565b600281815481106200072d57600080fd5b906000526020600020906003020160009150905080600001805462000752906200104a565b80601f016020809104026020016040519081016040528092919081815260200182805462000780906200104a565b8015620007d15780601f10620007a557610100808354040283529160200191620007d1565b820191906000526020600020905b815481529060010190602001808311620007b357829003601f168201915b505050505090806001018054620007e8906200104a565b80601f016020809104026020016040519081016040528092919081815260200182805462000816906200104a565b8015620008675780601f106200083b5761010080835404028352916020019162000867565b820191906000526020600020905b8154815290600101906020018083116200084957829003601f168201915b505050600290930154919250506001600160a01b031683565b6000546001600160a01b03163314620008ad5760405162461bcd60e51b8152600401620001e09062000f13565b6001600160a01b038116620009145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001e0565b620007198162000a32565b60008084471015620009745760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606401620001e0565b8251600003620009c75760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401620001e0565b8383516020850187f590506001600160a01b03811662000a2a5760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401620001e0565b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a81b900460ff1662000af15760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620001e0565b6200062c6320cb8a8760e01b5b6001600160e01b0319808216900362000b5a5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401620001e0565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b82805462000b90906200104a565b90600052602060002090601f01602090048101928262000bb4576000855562000bff565b82601f1062000bcf57805160ff191683800117855562000bff565b8280016001018555821562000bff579182015b8281111562000bff57825182559160200191906001019062000be2565b5062000c0d92915062000c1f565b5090565b6107b1806200108783390190565b5b8082111562000c0d576000815560010162000c20565b60006020828403121562000c4957600080fd5b81356001600160e01b03198116811462000c6257600080fd5b9392505050565b60008083601f84011262000c7c57600080fd5b50813567ffffffffffffffff81111562000c9557600080fd5b60208301915083602082850101111562000cae57600080fd5b9250929050565b6001600160a01b03811681146200071957600080fd5b60008060008060006060868803121562000ce457600080fd5b853567ffffffffffffffff8082111562000cfd57600080fd5b62000d0b89838a0162000c69565b9097509550602088013591508082111562000d2557600080fd5b5062000d348882890162000c69565b909450925050604086013562000d4a8162000cb5565b809150509295509295909350565b60008060006040848603121562000d6e57600080fd5b833562000d7b8162000cb5565b9250602084013567ffffffffffffffff8082111562000d9957600080fd5b818601915086601f83011262000dae57600080fd5b81358181111562000dbe57600080fd5b8760208260051b850101111562000dd457600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562000e2a5783516001600160a01b03168352928401929184019160010162000e03565b50909695505050505050565b60006020828403121562000e4957600080fd5b5035919050565b60005b8381101562000e6d57818101518382015260200162000e53565b8381111562000e7d576000848401525b50505050565b6000815180845262000e9d81602086016020860162000e50565b601f01601f19169290920160200192915050565b60608152600062000ec6606083018662000e83565b828103602084015262000eda818662000e83565b91505060018060a01b0383166040830152949350505050565b60006020828403121562000f0657600080fd5b813562000c628162000cb5565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600062000f8760608301878962000f48565b828103602084015262000f9c81868862000f48565b91505060018060a01b03831660408301529695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811262000fe557600080fd5b83018035915067ffffffffffffffff8211156200100157600080fd5b60200191503681900382131562000cae57600080fd5b600083516200102b81846020880162000e50565b8351908301906200104181836020880162000e50565b01949350505050565b600181811c908216806200105f57607f821691505b6020821081036200108057634e487b7160e01b600052602260045260246000fd5b5091905056fe60806040526040516107b13803806107b183398101604081905261002291610349565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610417565b60008051602061076a833981519152146100695761006961043c565b6100758282600061007c565b50506104a1565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610117838360405180606001604052806027815260200161078a602791396101de565b9392505050565b610131816102bc60201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061076a83398151915260001b6102cb60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b0316856040516102619190610452565b600060405180830381855af49150503d806000811461029c576040519150601f19603f3d011682016040523d82523d6000602084013e6102a1565b606091505b5090925090506102b28282866102ce565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102dd575081610117565b8251156102ed5782518084602001fd5b8160405162461bcd60e51b815260040161018f919061046e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610338578181015183820152602001610320565b838111156100ab5750506000910152565b6000806040838503121561035c57600080fd5b82516001600160a01b038116811461037357600080fd5b60208401519092506001600160401b038082111561039057600080fd5b818501915085601f8301126103a457600080fd5b8151818111156103b6576103b6610307565b604051601f8201601f19908116603f011681019083821181831017156103de576103de610307565b816040528281528860208487010111156103f757600080fd5b61040883602083016020880161031d565b80955050505050509250929050565b60008282101561043757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161046481846020870161031d565b9190910192915050565b602081526000825180602084015261048d81604085016020870161031d565b601f01601f19169190910160400192915050565b6102ba806104b06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c1396a395593415293023c3bc166734d52c4ee9136c6ff8eaef33568949ec5f064736f6c634300080d0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220481cffbf50ad444f58d567778ef76401f6b980c931c0ea1d90098e60207be04264736f6c634300080d0033";

type TreasuryModuleFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryModuleFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasuryModuleFactory__factory extends ContractFactory {
  constructor(...args: TreasuryModuleFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TreasuryModuleFactory> {
    return super.deploy(overrides || {}) as Promise<TreasuryModuleFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TreasuryModuleFactory {
    return super.attach(address) as TreasuryModuleFactory;
  }
  override connect(signer: Signer): TreasuryModuleFactory__factory {
    return super.connect(signer) as TreasuryModuleFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryModuleFactoryInterface {
    return new utils.Interface(_abi) as TreasuryModuleFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasuryModuleFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasuryModuleFactory;
  }
}
