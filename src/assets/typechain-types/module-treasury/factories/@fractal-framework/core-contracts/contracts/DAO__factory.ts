/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DAO,
  DAOInterface,
} from "../../../../@fractal-framework/core-contracts/contracts/DAO";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnequalArrayLengths",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IAccessControlDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_moduleFactoryBase",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516114df61004c60003960008181610299015281816102e20152818161047f015281816104bf015261055201526114df6000f3fe6080604052600436106100865760003560e01c80634571e3a6116100595780634571e3a61461013c5780634f1ef2861461015c57806352d1902d1461016f5780638991255b14610192578063a516a5bf146101b257600080fd5b806301ffc9a71461008b57806306fdde03146100c057806313007d55146100e25780633659cfe61461011a575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610dcc565b6101d2565b60405190151581526020015b60405180910390f35b3480156100cc57600080fd5b506100d56101fd565b6040516100b79190610e22565b3480156100ee57600080fd5b50606554610102906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b34801561012657600080fd5b5061013a610135366004610e71565b61028f565b005b34801561014857600080fd5b5061013a610157366004610e8c565b610377565b61013a61016a366004610f30565b610475565b34801561017b57600080fd5b50610184610545565b6040519081526020016100b7565b34801561019e57600080fd5b50606654610102906001600160a01b031681565b3480156101be57600080fd5b5061013a6101cd36600461103e565b6105f8565b60006001600160e01b0319821663e067461960e01b14806101f757506101f782610816565b92915050565b60606067805461020c906110d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610238906110d8565b80156102855780601f1061025a57610100808354040283529160200191610285565b820191906000526020600020905b81548152906001019060200180831161026857829003601f168201915b5050505050905090565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102e05760405162461bcd60e51b81526004016102d790611112565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610329600080516020611463833981519152546001600160a01b031690565b6001600160a01b03161461034f5760405162461bcd60e51b81526004016102d79061115e565b6103588161084b565b60408051600080825260208201909252610374918391906108ec565b50565b600054610100900460ff166103925760005460ff1615610396565b303b155b6103f95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102d7565b600054610100900460ff1615801561041b576000805461ffff19166101011790555b61045c858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a5c92505050565b801561046e576000805461ff00191690555b5050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104bd5760405162461bcd60e51b81526004016102d790611112565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610506600080516020611463833981519152546001600160a01b031690565b6001600160a01b03161461052c5760405162461bcd60e51b81526004016102d79061115e565b6105358261084b565b610541828260016108ec565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105e55760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016102d7565b5060008051602061146383398151915290565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061063b90339030906001600160e01b031960003516906004016111aa565b602060405180830381865afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c91906111d7565b6106995760405163ea8e4eb560e01b815260040160405180910390fd5b84831415806106a85750848114155b156106c6576040516311e86f7360e01b815260040160405180910390fd5b60006040518060600160405280602281526020016114416022913990508560005b818110156107ca576000808a8a84818110610704576107046111f9565b90506020020160208101906107199190610e71565b6001600160a01b0316898985818110610734576107346111f9565b9050602002013588888681811061074d5761074d6111f9565b905060200281019061075f919061120f565b60405161076d929190611256565b60006040518083038185875af1925050503d80600081146107aa576040519150601f19603f3d011682016040523d82523d6000602084013e6107af565b606091505b50915091506107bf828287610acf565b5050506001016106e7565b507f56bfe74cbe37ff0615c4d027adf14b7793c59322d51411a0f5a26eb77abac09588888888888860405161080496959493929190611320565b60405180910390a15050505050505050565b60006001600160e01b031982166314026af160e01b14806101f757506301ffc9a760e01b6001600160e01b03198316146101f7565b6065546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd49061088e90339030906001600160e01b031960003516906004016111aa565b602060405180830381865afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf91906111d7565b6103745760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156109245761091f83610b0f565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561097e575060408051601f3d908101601f1916820190925261097b918101906113c0565b60015b6109e15760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016102d7565b6000805160206114638339815191528114610a505760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016102d7565b5061091f838383610bab565b600054610100900460ff16610a835760405162461bcd60e51b81526004016102d7906113d9565b606580546001600160a01b038086166001600160a01b03199283161790925560668054928516929091169190911790558051610ac6906067906020840190610d33565b5061091f610bd6565b60608315610ade575081610b08565b825115610aee5782518084602001fd5b8160405162461bcd60e51b81526004016102d79190610e22565b9392505050565b6001600160a01b0381163b610b7c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102d7565b60008051602061146383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610bb483610bff565b600082511180610bc15750805b1561091f57610bd08383610c3f565b50505050565b600054610100900460ff16610bfd5760405162461bcd60e51b81526004016102d7906113d9565b565b610c0881610b0f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610ca75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102d7565b600080846001600160a01b031684604051610cc29190611424565b600060405180830381855af49150503d8060008114610cfd576040519150601f19603f3d011682016040523d82523d6000602084013e610d02565b606091505b5091509150610d2a828260405180606001604052806027815260200161148360279139610acf565b95945050505050565b828054610d3f906110d8565b90600052602060002090601f016020900481019282610d615760008555610da7565b82601f10610d7a57805160ff1916838001178555610da7565b82800160010185558215610da7579182015b82811115610da7578251825591602001919060010190610d8c565b50610db3929150610db7565b5090565b5b80821115610db35760008155600101610db8565b600060208284031215610dde57600080fd5b81356001600160e01b031981168114610b0857600080fd5b60005b83811015610e11578181015183820152602001610df9565b83811115610bd05750506000910152565b6020815260008251806020840152610e41816040850160208701610df6565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610e6c57600080fd5b919050565b600060208284031215610e8357600080fd5b610b0882610e55565b60008060008060608587031215610ea257600080fd5b610eab85610e55565b9350610eb960208601610e55565b9250604085013567ffffffffffffffff80821115610ed657600080fd5b818701915087601f830112610eea57600080fd5b813581811115610ef957600080fd5b886020828501011115610f0b57600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610f4357600080fd5b610f4c83610e55565b9150602083013567ffffffffffffffff80821115610f6957600080fd5b818501915085601f830112610f7d57600080fd5b813581811115610f8f57610f8f610f1a565b604051601f8201601f19908116603f01168101908382118183101715610fb757610fb7610f1a565b81604052828152886020848701011115610fd057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008083601f84011261100457600080fd5b50813567ffffffffffffffff81111561101c57600080fd5b6020830191508360208260051b850101111561103757600080fd5b9250929050565b6000806000806000806060878903121561105757600080fd5b863567ffffffffffffffff8082111561106f57600080fd5b61107b8a838b01610ff2565b9098509650602089013591508082111561109457600080fd5b6110a08a838b01610ff2565b909650945060408901359150808211156110b957600080fd5b506110c689828a01610ff2565b979a9699509497509295939492505050565b600181811c908216806110ec57607f821691505b60208210810361110c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156111e957600080fd5b81518015158114610b0857600080fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261122657600080fd5b83018035915067ffffffffffffffff82111561124157600080fd5b60200191503681900382131561103757600080fd5b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b878110156113135782840389528135601e198836030181126112ca57600080fd5b8701803567ffffffffffffffff8111156112e357600080fd5b8036038913156112f257600080fd5b6112ff8682898501611266565b9a87019a95505050908401906001016112a9565b5091979650505050505050565b6060808252810186905260008760808301825b89811015611361576001600160a01b0361134c84610e55565b16825260209283019290910190600101611333565b5083810360208501528681526001600160fb1b0387111561138157600080fd5b8660051b915081886020830137818101915050602081016000815260208483030160408501526113b281868861128f565b9a9950505050505050505050565b6000602082840312156113d257600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611436818460208701610df6565b919091019291505056fe44414f3a2063616c6c20726576657274656420776974686f7574206d657373616765360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201be2dd348e03e6cbf9a451cfcdbeb5745f5e7d2f73c9cb039c6c5f7ef338653f64736f6c634300080d0033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAO> {
    return super.deploy(overrides || {}) as Promise<DAO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
