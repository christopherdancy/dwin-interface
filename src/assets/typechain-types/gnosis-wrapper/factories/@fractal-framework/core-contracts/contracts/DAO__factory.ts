/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DAO,
  DAOInterface,
} from "../../../../@fractal-framework/core-contracts/contracts/DAO";

const _abi = [
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnequalArrayLengths",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "accessControl",
    outputs: [
      {
        internalType: "contract IDAOAccessControl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_accessControl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_moduleFactory",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516115aa61004c600039600081816102ae015281816102f7015281816104f40152818161053401526105c701526115aa6000f3fe6080604052600436106100865760003560e01c80634571e3a6116100595780634571e3a61461013c5780634f1ef2861461015c57806352d1902d1461016f5780638991255b14610192578063a516a5bf146101b257600080fd5b806301ffc9a71461008b57806306fdde03146100c057806313007d55146100e25780633659cfe61461011a575b600080fd5b34801561009757600080fd5b506100ab6100a6366004610e97565b6101d2565b60405190151581526020015b60405180910390f35b3480156100cc57600080fd5b506100d5610212565b6040516100b79190610eed565b3480156100ee57600080fd5b50606654610102906001600160a01b031681565b6040516001600160a01b0390911681526020016100b7565b34801561012657600080fd5b5061013a610135366004610f3c565b6102a4565b005b34801561014857600080fd5b5061013a610157366004610f57565b61038c565b61013a61016a366004610ffb565b6104ea565b34801561017b57600080fd5b506101846105ba565b6040519081526020016100b7565b34801561019e57600080fd5b50606754610102906001600160a01b031681565b3480156101be57600080fd5b5061013a6101cd366004611109565b61066d565b60006301ffc9a760e01b6001600160e01b03198316148061020c57506001600160e01b0319821660009081526065602052604090205460ff165b92915050565b606060688054610221906111a3565b80601f016020809104026020016040519081016040528092919081815260200182805461024d906111a3565b801561029a5780601f1061026f5761010080835404028352916020019161029a565b820191906000526020600020905b81548152906001019060200180831161027d57829003601f168201915b5050505050905090565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102f55760405162461bcd60e51b81526004016102ec906111dd565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661033e60008051602061152e833981519152546001600160a01b031690565b6001600160a01b0316146103645760405162461bcd60e51b81526004016102ec90611229565b61036d8161088b565b604080516000808252602082019092526103899183919061092c565b50565b600054610100900460ff16158080156103ac5750600054600160ff909116105b806103c65750303b1580156103c6575060005460ff166001145b6104295760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102ec565b6000805460ff19166001179055801561044c576000805461ff0019166101001790555b61048d858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a9c92505050565b61049d63e067461960e01b610b1b565b80156104e3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105325760405162461bcd60e51b81526004016102ec906111dd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661057b60008051602061152e833981519152546001600160a01b031690565b6001600160a01b0316146105a15760405162461bcd60e51b81526004016102ec90611229565b6105aa8261088b565b6105b68282600161092c565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461065a5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016102ec565b5060008051602061152e83398151915290565b6066546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd4906106b090339030906001600160e01b03196000351690600401611275565b602060405180830381865afa1580156106cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f191906112a2565b61070e5760405163ea8e4eb560e01b815260040160405180910390fd5b848314158061071d5750848114155b1561073b576040516311e86f7360e01b815260040160405180910390fd5b600060405180606001604052806022815260200161150c6022913990508560005b8181101561083f576000808a8a84818110610779576107796112c4565b905060200201602081019061078e9190610f3c565b6001600160a01b03168989858181106107a9576107a96112c4565b905060200201358888868181106107c2576107c26112c4565b90506020028101906107d491906112da565b6040516107e2929190611321565b60006040518083038185875af1925050503d806000811461081f576040519150601f19603f3d011682016040523d82523d6000602084013e610824565b606091505b5091509150610834828287610b9a565b50505060010161075c565b507f56bfe74cbe37ff0615c4d027adf14b7793c59322d51411a0f5a26eb77abac095888888888888604051610879969594939291906113eb565b60405180910390a15050505050505050565b6066546040516001623b410b60e21b031981526001600160a01b039091169063ff12fbd4906108ce90339030906001600160e01b03196000351690600401611275565b602060405180830381865afa1580156108eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f91906112a2565b6103895760405163ea8e4eb560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156109645761095f83610bda565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109be575060408051601f3d908101601f191682019092526109bb9181019061148b565b60015b610a215760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016102ec565b60008051602061152e8339815191528114610a905760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016102ec565b5061095f838383610c76565b600054610100900460ff16610ac35760405162461bcd60e51b81526004016102ec906114a4565b606680546001600160a01b038086166001600160a01b03199283161790925560678054928516929091169190911790558051610b06906068906020840190610dfe565b50610b0f610ca1565b61095f630afed1ab60e11b5b6001600160e01b03198082169003610b755760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016102ec565b6001600160e01b0319166000908152606560205260409020805460ff19166001179055565b60608315610ba9575081610bd3565b825115610bb95782518084602001fd5b8160405162461bcd60e51b81526004016102ec9190610eed565b9392505050565b6001600160a01b0381163b610c475760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102ec565b60008051602061152e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610c7f83610cca565b600082511180610c8c5750805b1561095f57610c9b8383610d0a565b50505050565b600054610100900460ff16610cc85760405162461bcd60e51b81526004016102ec906114a4565b565b610cd381610bda565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610d725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102ec565b600080846001600160a01b031684604051610d8d91906114ef565b600060405180830381855af49150503d8060008114610dc8576040519150601f19603f3d011682016040523d82523d6000602084013e610dcd565b606091505b5091509150610df5828260405180606001604052806027815260200161154e60279139610b9a565b95945050505050565b828054610e0a906111a3565b90600052602060002090601f016020900481019282610e2c5760008555610e72565b82601f10610e4557805160ff1916838001178555610e72565b82800160010185558215610e72579182015b82811115610e72578251825591602001919060010190610e57565b50610e7e929150610e82565b5090565b5b80821115610e7e5760008155600101610e83565b600060208284031215610ea957600080fd5b81356001600160e01b031981168114610bd357600080fd5b60005b83811015610edc578181015183820152602001610ec4565b83811115610c9b5750506000910152565b6020815260008251806020840152610f0c816040850160208701610ec1565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610f3757600080fd5b919050565b600060208284031215610f4e57600080fd5b610bd382610f20565b60008060008060608587031215610f6d57600080fd5b610f7685610f20565b9350610f8460208601610f20565b9250604085013567ffffffffffffffff80821115610fa157600080fd5b818701915087601f830112610fb557600080fd5b813581811115610fc457600080fd5b886020828501011115610fd657600080fd5b95989497505060200194505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561100e57600080fd5b61101783610f20565b9150602083013567ffffffffffffffff8082111561103457600080fd5b818501915085601f83011261104857600080fd5b81358181111561105a5761105a610fe5565b604051601f8201601f19908116603f0116810190838211818310171561108257611082610fe5565b8160405282815288602084870101111561109b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008083601f8401126110cf57600080fd5b50813567ffffffffffffffff8111156110e757600080fd5b6020830191508360208260051b850101111561110257600080fd5b9250929050565b6000806000806000806060878903121561112257600080fd5b863567ffffffffffffffff8082111561113a57600080fd5b6111468a838b016110bd565b9098509650602089013591508082111561115f57600080fd5b61116b8a838b016110bd565b9096509450604089013591508082111561118457600080fd5b5061119189828a016110bd565b979a9699509497509295939492505050565b600181811c908216806111b757607f821691505b6020821081036111d757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156112b457600080fd5b81518015158114610bd357600080fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126112f157600080fd5b83018035915067ffffffffffffffff82111561130c57600080fd5b60200191503681900382131561110257600080fd5b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b878110156113de5782840389528135601e1988360301811261139557600080fd5b8701803567ffffffffffffffff8111156113ae57600080fd5b8036038913156113bd57600080fd5b6113ca8682898501611331565b9a87019a9550505090840190600101611374565b5091979650505050505050565b6060808252810186905260008760808301825b8981101561142c576001600160a01b0361141784610f20565b168252602092830192909101906001016113fe565b5083810360208501528681526001600160fb1b0387111561144c57600080fd5b8660051b9150818860208301378181019150506020810160008152602084830301604085015261147d81868861135a565b9a9950505050505050505050565b60006020828403121561149d57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611501818460208701610ec1565b919091019291505056fe44414f3a2063616c6c20726576657274656420776974686f7574206d657373616765360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212204befa93919d64413acd38e684bcf52330f46a9196e724f5e2d983fecd9c4d0b964736f6c634300080d0033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAO> {
    return super.deploy(overrides || {}) as Promise<DAO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAO {
    return super.attach(address) as DAO;
  }
  override connect(signer: Signer): DAO__factory {
    return super.connect(signer) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new utils.Interface(_abi) as DAOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DAO {
    return new Contract(address, _abi, signerOrProvider) as DAO;
  }
}
