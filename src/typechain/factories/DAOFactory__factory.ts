/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DAOFactory, DAOFactoryInterface } from "../DAOFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "DAOAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
    ],
    name: "DAOCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "daoImplementation",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessControlImplementation",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "roles",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "rolesAdmins",
            type: "string[]",
          },
          {
            internalType: "address[][]",
            name: "members",
            type: "address[][]",
          },
          {
            internalType: "string[]",
            name: "daoFunctionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "daoActionRoles",
            type: "string[][]",
          },
          {
            internalType: "address[]",
            name: "moduleTargets",
            type: "address[]",
          },
          {
            internalType: "string[]",
            name: "moduleFunctionDescs",
            type: "string[]",
          },
          {
            internalType: "string[][]",
            name: "moduleActionRoles",
            type: "string[][]",
          },
        ],
        internalType: "struct IDAOFactory.CreateDAOParams",
        name: "createDaoParams",
        type: "tuple",
      },
    ],
    name: "createDAO",
    outputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "accessControl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611524806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806301ffc9a7146200003f5780630ccb6c70146200006b575b600080fd5b6200005662000050366004620006d8565b620000a3565b60405190151581526020015b60405180910390f35b620000826200007c3660046200070b565b620000da565b604080516001600160a01b0393841681529290911660208301520162000062565b60006001600160e01b0319821662ccb6c760e41b1480620000d457506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080620000ec602084018462000767565b604051620000fa90620006ca565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f08015801562000136573d6000803e3d6000fd5b50915060006200014a60a085018562000785565b90506200015b60e086018662000785565b62000168929150620007ef565b905060008167ffffffffffffffff8111156200018857620001886200080a565b604051908082528060200260200182016040528015620001b2578160200160208202803683370190505b50905060008267ffffffffffffffff811115620001d357620001d36200080a565b6040519080825280602002602001820160405280156200020857816020015b6060815260200190600190039081620001f25790505b50905060008367ffffffffffffffff8111156200022957620002296200080a565b6040519080825280602002602001820160405280156200025e57816020015b6060815260200190600190039081620002485790505b50905060005b6200027360a089018962000785565b9050811015620003ae578684828151811062000293576200029362000820565b6001600160a01b0390921660209283029190910190910152620002ba60a089018962000785565b82818110620002cd57620002cd62000820565b9050602002810190620002e1919062000836565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050855186925084915081106200032c576200032c62000820565b60209081029190910101526200034660c089018962000785565b8281811062000359576200035962000820565b90506020028101906200036d919062000785565b6200037891620008b4565b8282815181106200038d576200038d62000820565b60200260200101819052508080620003a59062000999565b91505062000264565b5060005b620003c160e089018962000785565b905081101562000557576000620003dc60a08a018a62000785565b620003e9915083620007ef565b9050620003fa60e08a018a62000785565b838181106200040d576200040d62000820565b905060200201602081019062000424919062000767565b85828151811062000439576200043962000820565b6001600160a01b0390921660209283029190910190910152620004616101008a018a62000785565b8381811062000474576200047462000820565b905060200281019062000488919062000836565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505086518792508491508110620004d357620004d362000820565b6020908102919091010152620004ee6101208a018a62000785565b8381811062000501576200050162000820565b905060200281019062000515919062000785565b6200052091620008b4565b83828151811062000535576200053562000820565b60200260200101819052505080806200054e9062000999565b915050620003b2565b506200056a604088016020890162000767565b637ceb46c560e11b876200058260408b018b62000785565b6200059160608d018d62000785565b620005a060808f018f62000785565b8b8b8b604051602401620005be9a9998979695949392919062000be6565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620005fd90620006ca565b6200060a92919062000d0f565b604051809103906000f08015801562000627573d6000803e3d6000fd5b5060405163189acdbd60e31b81526001600160a01b0380831660048301529196509087169063c4d66de890602401600060405180830381600087803b1580156200067057600080fd5b505af115801562000685573d6000803e3d6000fd5b50506040516001600160a01b038089169350891691507fc5d7346247c6d2ba52de925ca697bf6c93e96e0b51e41bb21a27276915d8a18090600090a350505050915091565b6107b18062000d3e83390190565b600060208284031215620006eb57600080fd5b81356001600160e01b0319811681146200070457600080fd5b9392505050565b6000602082840312156200071e57600080fd5b813567ffffffffffffffff8111156200073657600080fd5b820161014081850312156200070457600080fd5b80356001600160a01b03811681146200076257600080fd5b919050565b6000602082840312156200077a57600080fd5b62000704826200074a565b6000808335601e198436030181126200079d57600080fd5b83018035915067ffffffffffffffff821115620007b957600080fd5b6020019150600581901b3603821315620007d257600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620008055762000805620007d9565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126200084e57600080fd5b83018035915067ffffffffffffffff8211156200086a57600080fd5b602001915036819003821315620007d257600080fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620008ac57620008ac6200080a565b604052919050565b600067ffffffffffffffff80841115620008d257620008d26200080a565b8360051b6020620008e581830162000880565b868152918501918181019036841115620008fe57600080fd5b865b848110156200098d578035868111156200091a5760008081fd5b8801601f36818301126200092e5760008081fd5b8135888111156200094357620009436200080a565b62000956818301601f1916880162000880565b915080825236878285010111156200096e5760008081fd5b8087840188840137600090820187015284525091830191830162000900565b50979650505050505050565b6000600019821415620009b057620009b0620007d9565b5060010190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b8781101562000a6b5782840389528135601e1988360301811262000a1d57600080fd5b8701803567ffffffffffffffff81111562000a3757600080fd5b80360389131562000a4757600080fd5b62000a568682898501620009b7565b9a87019a9550505090840190600101620009fa565b5091979650505050505050565b8183526000602080850194508260005b8581101562000ab8576001600160a01b0362000aa4836200074a565b168752958201959082019060010162000a88565b509495945050505050565b600081518084526020808501945080840160005b8381101562000ab85781516001600160a01b03168752958201959082019060010162000ad7565b6000815180845260005b8181101562000b265760208185018101518683018201520162000b08565b8181111562000b39576000602083870101525b50601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101562000a6b57828403895262000b8784835162000afe565b9885019893509084019060010162000b6c565b600081518084526020808501808196508360051b8101915082860160005b8581101562000a6b57828403895262000bd384835162000b4e565b9885019893509084019060010162000bb8565b6001600160a01b038b16815260e0602080830182905260009162000c0e9084018c8e620009e0565b838103604085015262000c23818b8d620009e0565b84810360608601528881529050818101600589901b820183018a60005b8b81101562000cb957848303601f190184528135368e9003601e1901811262000c6857600080fd5b8d01803567ffffffffffffffff81111562000c8257600080fd5b8060051b36038f131562000c9557600080fd5b62000ca485828a850162000a78565b95880195945050509085019060010162000c40565b5050858103608087015262000ccf818a62000ac3565b935050505082810360a084015262000ce8818662000b4e565b905082810360c084015262000cfe818562000b9a565b9d9c50505050505050505050505050565b6001600160a01b038316815260406020820181905260009062000d359083018462000afe565b94935050505056fe60806040526040516107b13803806107b183398101604081905261002291610349565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610417565b60008051602061076a833981519152146100695761006961043c565b6100758282600061007c565b50506104a1565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610117838360405180606001604052806027815260200161078a602791396101de565b9392505050565b610131816102bc60201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061076a83398151915260001b6102cb60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b0316856040516102619190610452565b600060405180830381855af49150503d806000811461029c576040519150601f19603f3d011682016040523d82523d6000602084013e6102a1565b606091505b5090925090506102b28282866102ce565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102dd575081610117565b8251156102ed5782518084602001fd5b8160405162461bcd60e51b815260040161018f919061046e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610338578181015183820152602001610320565b838111156100ab5750506000910152565b6000806040838503121561035c57600080fd5b82516001600160a01b038116811461037357600080fd5b60208401519092506001600160401b038082111561039057600080fd5b818501915085601f8301126103a457600080fd5b8151818111156103b6576103b6610307565b604051601f8201601f19908116603f011681019083821181831017156103de576103de610307565b816040528281528860208487010111156103f757600080fd5b61040883602083016020880161031d565b80955050505050509250929050565b60008282101561043757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161046481846020870161031d565b9190910192915050565b602081526000825180602084015261048d81604085016020870161031d565b601f01601f19169190910160400192915050565b6102ba806104b06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ba725be0c5228e0bb04c28244c11a5cce42b5e24a10ba02ac86acc3152e48caf64736f6c634300080b0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fec66b4dbb68e11beb079545acecc149e517302f05c06b1604f465c3bceec5bd64736f6c634300080b0033";

export class DAOFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DAOFactory> {
    return super.deploy(overrides || {}) as Promise<DAOFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DAOFactory {
    return super.attach(address) as DAOFactory;
  }
  connect(signer: Signer): DAOFactory__factory {
    return super.connect(signer) as DAOFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOFactoryInterface {
    return new utils.Interface(_abi) as DAOFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOFactory {
    return new Contract(address, _abi, signerOrProvider) as DAOFactory;
  }
}
